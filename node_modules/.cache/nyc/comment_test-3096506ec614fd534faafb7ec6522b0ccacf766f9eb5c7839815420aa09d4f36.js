"use strict";function cov_16vcbrdsdx(){var path="/home/nyakamwe/Desktop/my-brand-nyakamwe/server/src/test/comment_test.js";var hash="782e89ce800fddf3841eed765b904bdc0278bcd1";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/home/nyakamwe/Desktop/my-brand-nyakamwe/server/src/test/comment_test.js",statementMap:{"0":{start:{line:3,column:16},end:{line:3,column:59}},"1":{start:{line:5,column:12},end:{line:5,column:51}},"2":{start:{line:7,column:13},end:{line:7,column:56}},"3":{start:{line:9,column:16},end:{line:9,column:60}},"4":{start:{line:11,column:12},end:{line:11,column:37}},"5":{start:{line:13,column:13},end:{line:13,column:53}},"6":{start:{line:15,column:12},end:{line:15,column:37}},"7":{start:{line:17,column:39},end:{line:17,column:93}},"8":{start:{line:19,column:0},end:{line:19,column:27}},"9":{start:{line:24,column:0},end:{line:24,column:23}},"10":{start:{line:26,column:0},end:{line:26,column:37}},"11":{start:{line:28,column:0},end:{line:209,column:3}},"12":{start:{line:29,column:2},end:{line:42,column:5}},"13":{start:{line:31,column:18},end:{line:31,column:161}},"14":{start:{line:33,column:4},end:{line:41,column:7}},"15":{start:{line:37,column:6},end:{line:37,column:35}},"16":{start:{line:38,column:6},end:{line:38,column:13}},"17":{start:{line:40,column:6},end:{line:40,column:25}},"18":{start:{line:47,column:2},end:{line:133,column:5}},"19":{start:{line:48,column:4},end:{line:52,column:7}},"20":{start:{line:49,column:6},end:{line:49,column:59}},"21":{start:{line:51,column:6},end:{line:51,column:62}},"22":{start:{line:54,column:4},end:{line:67,column:7}},"23":{start:{line:55,column:22},end:{line:59,column:8}},"24":{start:{line:61,column:6},end:{line:66,column:9}},"25":{start:{line:62,column:8},end:{line:62,column:41}},"26":{start:{line:63,column:8},end:{line:63,column:44}},"27":{start:{line:64,column:8},end:{line:64,column:75}},"28":{start:{line:65,column:8},end:{line:65,column:15}},"29":{start:{line:69,column:22},end:{line:72,column:5}},"30":{start:{line:73,column:4},end:{line:84,column:7}},"31":{start:{line:74,column:6},end:{line:83,column:9}},"32":{start:{line:78,column:8},end:{line:78,column:34}},"33":{start:{line:78,column:17},end:{line:78,column:34}},"34":{start:{line:79,column:8},end:{line:79,column:41}},"35":{start:{line:80,column:8},end:{line:80,column:44}},"36":{start:{line:81,column:8},end:{line:81,column:39}},"37":{start:{line:82,column:8},end:{line:82,column:15}},"38":{start:{line:86,column:4},end:{line:102,column:7}},"39":{start:{line:87,column:24},end:{line:87,column:44}},"40":{start:{line:88,column:19},end:{line:91,column:8}},"41":{start:{line:92,column:6},end:{line:92,column:18}},"42":{start:{line:94,column:6},end:{line:101,column:9}},"43":{start:{line:96,column:8},end:{line:96,column:41}},"44":{start:{line:97,column:8},end:{line:97,column:44}},"45":{start:{line:98,column:8},end:{line:98,column:85}},"46":{start:{line:99,column:8},end:{line:99,column:21}},"47":{start:{line:100,column:8},end:{line:100,column:15}},"48":{start:{line:103,column:4},end:{line:118,column:7}},"49":{start:{line:104,column:21},end:{line:104,column:23}},"50":{start:{line:105,column:25},end:{line:108,column:8}},"51":{start:{line:109,column:6},end:{line:109,column:24}},"52":{start:{line:111,column:6},end:{line:117,column:9}},"53":{start:{line:112,column:8},end:{line:112,column:41}},"54":{start:{line:113,column:8},end:{line:113,column:44}},"55":{start:{line:114,column:8},end:{line:114,column:54}},"56":{start:{line:115,column:8},end:{line:115,column:28}},"57":{start:{line:116,column:8},end:{line:116,column:15}},"58":{start:{line:119,column:4},end:{line:132,column:7}},"59":{start:{line:120,column:21},end:{line:120,column:47}},"60":{start:{line:121,column:25},end:{line:124,column:7}},"61":{start:{line:126,column:6},end:{line:131,column:9}},"62":{start:{line:127,column:8},end:{line:127,column:41}},"63":{start:{line:128,column:8},end:{line:128,column:44}},"64":{start:{line:129,column:8},end:{line:129,column:80}},"65":{start:{line:130,column:8},end:{line:130,column:15}},"66":{start:{line:138,column:2},end:{line:185,column:5}},"67":{start:{line:139,column:4},end:{line:149,column:7}},"68":{start:{line:140,column:21},end:{line:140,column:23}},"69":{start:{line:142,column:6},end:{line:148,column:9}},"70":{start:{line:145,column:8},end:{line:145,column:41}},"71":{start:{line:146,column:8},end:{line:146,column:46}},"72":{start:{line:147,column:8},end:{line:147,column:15}},"73":{start:{line:150,column:4},end:{line:160,column:7}},"74":{start:{line:151,column:21},end:{line:151,column:47}},"75":{start:{line:153,column:6},end:{line:159,column:9}},"76":{start:{line:156,column:8},end:{line:156,column:41}},"77":{start:{line:157,column:8},end:{line:157,column:76}},"78":{start:{line:158,column:8},end:{line:158,column:15}},"79":{start:{line:161,column:4},end:{line:172,column:7}},"80":{start:{line:162,column:24},end:{line:162,column:27}},"81":{start:{line:164,column:6},end:{line:171,column:9}},"82":{start:{line:167,column:8},end:{line:167,column:41}},"83":{start:{line:168,column:8},end:{line:168,column:44}},"84":{start:{line:169,column:8},end:{line:169,column:54}},"85":{start:{line:170,column:8},end:{line:170,column:15}},"86":{start:{line:173,column:4},end:{line:184,column:7}},"87":{start:{line:174,column:24},end:{line:174,column:50}},"88":{start:{line:176,column:6},end:{line:183,column:9}},"89":{start:{line:179,column:8},end:{line:179,column:41}},"90":{start:{line:180,column:8},end:{line:180,column:44}},"91":{start:{line:181,column:8},end:{line:181,column:84}},"92":{start:{line:182,column:8},end:{line:182,column:15}},"93":{start:{line:190,column:2},end:{line:208,column:5}},"94":{start:{line:191,column:4},end:{line:198,column:7}},"95":{start:{line:192,column:24},end:{line:192,column:27}},"96":{start:{line:194,column:6},end:{line:197,column:9}},"97":{start:{line:195,column:8},end:{line:195,column:41}},"98":{start:{line:196,column:8},end:{line:196,column:15}},"99":{start:{line:199,column:4},end:{line:207,column:7}},"100":{start:{line:200,column:24},end:{line:200,column:50}},"101":{start:{line:202,column:6},end:{line:206,column:9}},"102":{start:{line:203,column:8},end:{line:203,column:41}},"103":{start:{line:204,column:8},end:{line:204,column:83}},"104":{start:{line:205,column:8},end:{line:205,column:15}}},fnMap:{"0":{name:"_interopRequireDefault",decl:{start:{line:17,column:9},end:{line:17,column:31}},loc:{start:{line:17,column:37},end:{line:17,column:95}},line:17},"1":{name:"(anonymous_1)",decl:{start:{line:28,column:39},end:{line:28,column:40}},loc:{start:{line:28,column:45},end:{line:209,column:1}},line:28},"2":{name:"(anonymous_2)",decl:{start:{line:29,column:9},end:{line:29,column:10}},loc:{start:{line:29,column:25},end:{line:42,column:3}},line:29},"3":{name:"(anonymous_3)",decl:{start:{line:36,column:12},end:{line:36,column:13}},loc:{start:{line:36,column:27},end:{line:39,column:5}},line:36},"4":{name:"(anonymous_4)",decl:{start:{line:39,column:13},end:{line:39,column:14}},loc:{start:{line:39,column:22},end:{line:41,column:5}},line:39},"5":{name:"(anonymous_5)",decl:{start:{line:47,column:42},end:{line:47,column:43}},loc:{start:{line:47,column:48},end:{line:133,column:3}},line:47},"6":{name:"(anonymous_6)",decl:{start:{line:48,column:11},end:{line:48,column:12}},loc:{start:{line:48,column:17},end:{line:52,column:5}},line:48},"7":{name:"(anonymous_7)",decl:{start:{line:54,column:28},end:{line:54,column:29}},loc:{start:{line:54,column:36},end:{line:67,column:5}},line:54},"8":{name:"(anonymous_8)",decl:{start:{line:61,column:81},end:{line:61,column:82}},loc:{start:{line:61,column:100},end:{line:66,column:7}},line:61},"9":{name:"(anonymous_9)",decl:{start:{line:73,column:23},end:{line:73,column:24}},loc:{start:{line:73,column:31},end:{line:84,column:5}},line:73},"10":{name:"(anonymous_10)",decl:{start:{line:77,column:13},end:{line:77,column:14}},loc:{start:{line:77,column:38},end:{line:83,column:7}},line:77},"11":{name:"(anonymous_11)",decl:{start:{line:86,column:29},end:{line:86,column:30}},loc:{start:{line:86,column:37},end:{line:102,column:5}},line:86},"12":{name:"(anonymous_12)",decl:{start:{line:95,column:65},end:{line:95,column:66}},loc:{start:{line:95,column:92},end:{line:101,column:7}},line:95},"13":{name:"(anonymous_13)",decl:{start:{line:103,column:28},end:{line:103,column:29}},loc:{start:{line:103,column:36},end:{line:118,column:5}},line:103},"14":{name:"(anonymous_14)",decl:{start:{line:111,column:145},end:{line:111,column:146}},loc:{start:{line:111,column:164},end:{line:117,column:7}},line:111},"15":{name:"(anonymous_15)",decl:{start:{line:119,column:64},end:{line:119,column:65}},loc:{start:{line:119,column:72},end:{line:132,column:5}},line:119},"16":{name:"(anonymous_16)",decl:{start:{line:126,column:145},end:{line:126,column:146}},loc:{start:{line:126,column:164},end:{line:131,column:7}},line:126},"17":{name:"(anonymous_17)",decl:{start:{line:138,column:41},end:{line:138,column:42}},loc:{start:{line:138,column:47},end:{line:185,column:3}},line:138},"18":{name:"(anonymous_18)",decl:{start:{line:139,column:54},end:{line:139,column:55}},loc:{start:{line:139,column:62},end:{line:149,column:5}},line:139},"19":{name:"(anonymous_19)",decl:{start:{line:144,column:13},end:{line:144,column:14}},loc:{start:{line:144,column:32},end:{line:148,column:7}},line:144},"20":{name:"(anonymous_20)",decl:{start:{line:150,column:49},end:{line:150,column:50}},loc:{start:{line:150,column:57},end:{line:160,column:5}},line:150},"21":{name:"(anonymous_21)",decl:{start:{line:155,column:13},end:{line:155,column:14}},loc:{start:{line:155,column:32},end:{line:159,column:7}},line:155},"22":{name:"(anonymous_22)",decl:{start:{line:161,column:35},end:{line:161,column:36}},loc:{start:{line:161,column:43},end:{line:172,column:5}},line:161},"23":{name:"(anonymous_23)",decl:{start:{line:166,column:13},end:{line:166,column:14}},loc:{start:{line:166,column:32},end:{line:171,column:7}},line:166},"24":{name:"(anonymous_24)",decl:{start:{line:173,column:47},end:{line:173,column:48}},loc:{start:{line:173,column:55},end:{line:184,column:5}},line:173},"25":{name:"(anonymous_25)",decl:{start:{line:178,column:13},end:{line:178,column:14}},loc:{start:{line:178,column:32},end:{line:183,column:7}},line:178},"26":{name:"(anonymous_26)",decl:{start:{line:190,column:39},end:{line:190,column:40}},loc:{start:{line:190,column:45},end:{line:208,column:3}},line:190},"27":{name:"(anonymous_27)",decl:{start:{line:191,column:36},end:{line:191,column:37}},loc:{start:{line:191,column:44},end:{line:198,column:5}},line:191},"28":{name:"(anonymous_28)",decl:{start:{line:194,column:128},end:{line:194,column:129}},loc:{start:{line:194,column:147},end:{line:197,column:7}},line:194},"29":{name:"(anonymous_29)",decl:{start:{line:199,column:63},end:{line:199,column:64}},loc:{start:{line:199,column:71},end:{line:207,column:5}},line:199},"30":{name:"(anonymous_30)",decl:{start:{line:202,column:128},end:{line:202,column:129}},loc:{start:{line:202,column:147},end:{line:206,column:7}},line:202}},branchMap:{"0":{loc:{start:{line:17,column:46},end:{line:17,column:92}},type:"cond-expr",locations:[{start:{line:17,column:70},end:{line:17,column:73}},{start:{line:17,column:76},end:{line:17,column:92}}],line:17},"1":{loc:{start:{line:17,column:46},end:{line:17,column:67}},type:"binary-expr",locations:[{start:{line:17,column:46},end:{line:17,column:49}},{start:{line:17,column:53},end:{line:17,column:67}}],line:17},"2":{loc:{start:{line:78,column:8},end:{line:78,column:34}},type:"if",locations:[{start:{line:78,column:8},end:{line:78,column:34}},{start:{line:78,column:8},end:{line:78,column:34}}],line:78}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0},b:{"0":[0,0],"1":[0,0],"2":[0,0]},inputSourceMap:{version:3,sources:["comment_test.js"],names:["require","config","user","autToken","id","cId","chai","should","use","chaiHttp","describe","before","done","dbURI","process","env","DB_USER","DB_PASSWORD","mongoose","connect","useNewUrlParser","useUnifiedTopology","then","responseult","console","log","catch","error","connection","dropCollection","it","newUser","User","username","email","password","request","server","post","send","end","err","response","have","status","body","be","a","property","eql","logInUser","Token","userToken","Post","title","content","save","set","postId","newComment","Comment","description","get","commentId","delete"],mappings:"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",sourceRoot:"/home/nyakamwe/Desktop/my-brand-nyakamwe/server/src/test/",sourcesContent:["import mongoose from 'mongoose';\nimport chai from 'chai';\nimport server from \"../index\";\nimport chaiHttp from \"chai-http\";\nimport {Post,Comment} from \"../models/Post\";\nrequire(\"dotenv\").config();\n\n\n//to mock a function during testing\nimport sinon from 'sinon'\nimport { User } from '../models/User';\n\nlet user, autToken, id, cId;\n\n//assertion style\nchai.should();\n\nchai.use(chaiHttp)  \n    \n    \ndescribe('Test for Comment Endpoints', ()=>{\n    before(function(done) {\n        // Connect to MongoDB database\n    const dbURI =`mongodb+srv://${process.env.DB_USER}:${process.env.DB_PASSWORD}@node-applications.fe4au.mongodb.net/node-tutorial?retryWrites=true&w=majority`\n    mongoose.connect(dbURI,{useNewUrlParser:true, useUnifiedTopology:true}).then((responseult)=>{\n\n            console.log('Db Connected!')\n\n            done();\n            \n        }).catch((error)=>{\n            console.log(error)\n        })\n\n\n    });  \n\n    /**\n    * POST comment route\n    */\n\n     describe('POST /api/posts/:id/comment', ()=>{\n         before(()=>{\n             mongoose.connection.dropCollection('users')\n             mongoose.connection.dropCollection('comments')\n         })\n\n        // create user and login \n    it('creates new user ', (done)=>{\n\n        const newUser = new User({\n            username:\"menase\",\n            email:\"menase@mail.com\",\n            password:\"password test\"\n       \n        })\n\n        chai.request(server)\n        .post(\"/api/users\")\n        .send(newUser)\n        .end((err, response)=>{\n            response.should.have.status(201);\n            response.body.should.be.a('object');\n            response.body.should.have.property('message').eql(\"user created!\");\n        done();   \n        })\n    })\n\n    // login\n    const logInUser = {\n        username:'menase',\n        password:'password test'\n    }\n\n    it('login a user', (done)=>{\n        chai.request(server)\n        .post('/api/users/login')\n        .send({username:logInUser.username, password:logInUser.password})\n        .end(function(err, response) {\n            if (err) return done(err);\n\n            response.should.have.status(200);\n            response.body.should.be.a('object');\n            autToken = response.body.Token\n            \n            done();\n        });\n\n    })\n\n    //post creation\n    it(\"creates a new post\", (done)=>{\n        const userToken = 'Bearer ' + autToken\n        \n        const post = new Post({\n            title: \"unit testing\",\n            content: \"I am testing nodejs api using mocha with chai assertion library\"\n            \n        })\n        post.save()\n        \n        chai.request(server)\n        .post(\"/api/posts\")\n    \n        //set the auth header with our token\n        .set('Authorization', 'Bearer ' + autToken)\n        .send(post)\n        .end(function(error, response) {\n            response.should.have.status(201);\n            response.body.should.be.a('object');\n            response.body.should.have.property('message').eql(\"Post Saved successfully\");\n\n            id= post.id\n        done();  \n        });\n    })\n\n\n    it('comment on a post', (done)=>{\n        const postId = id;\n        const newComment = new Comment({\n            postId,\n            description:\"testing a comment\"\n        });\n\n        newComment.save()\n\n        chai.request(server)\n        .post(`/api/posts/${postId}/comment`)\n        .send(newComment)\n        .set('Authorization', 'Bearer ' + autToken )\n        .end((err, response)=>{\n            response.should.have.status(201);\n            response.body.should.be.a('object');\n            response.body.should.have.property('comment')\n            \n            cId = newComment.id\n        done();\n        })\n    })\n\n\n    it('handles when you want to comment on non existing post', (done)=>{\n        const postId = \"62597f8412f8da13b4e0a385\"\n        const newComment ={\n            postId,\n            description:\"testing a comment\"\n        };\n        chai.request(server)\n        .post(`/api/posts/${postId}/comment`)\n        .send(newComment)\n        .set('Authorization', 'Bearer ' + autToken )\n        .end((err, response)=>{\n            response.should.have.status(404);\n            response.body.should.be.a('object');\n            response.body.should.have.property('message').eql(\"Post not available\");\n        done();\n        })\n    })\n\n    })\n  \n    /**\n     * GET comment route\n    */\n\n    describe('GET /api/posts/:id/comment', ()=>{\n\n    it('shows all comments related to specific post', (done)=>{\n            const postId = id\n            chai.request(server)\n            .get(`/api/posts/${postId}/comment`)\n            .send({postId})\n            .end((err, response)=>{\n                response.should.have.status(200);\n                response.body.should.have.a('object')\n            done();\n            })\n    })\n\n    it('show error when that post in not in DB', (done)=>{\n        \n        const postId = \"625b07c93cc2f2b0163f1a75\"\n        chai.request(server)\n        .get(`/api/posts/${postId}/comment`)\n        .send({postId})\n        .end((err, response)=>{\n            response.should.have.status(404);\n            response.body.should.have.property('message').eql(\"post not found\")\n        done();\n        })\n    })\n\n    \n\n        \n    it('shows individual comment', (done)=>{\n        const commentId = cId\n        chai.request(server)\n        .get(`/api/comments/${commentId}`)\n        .send({commentId})\n        .end((err, response)=>{\n            response.should.have.status(200);\n            response.body.should.be.a('object')\n            response.body.should.have.property('comment')\n        done();\n        })\n    })\n\n    it('shows error for non existing comment', (done)=>{\n        const commentId = \"625943e64e9dd47477f9be96\"\n        chai.request(server)\n        .get(`/api/comments/${commentId}`)\n        .send({commentId})\n        .end((err, response)=>{\n            response.should.have.status(404);\n            response.body.should.be.a('object')\n            response.body.should.have.property('comment').eql(\"Comment Doesn't Exists\")\n        done();\n        })\n    })\n\n        \n        \n    })\n\n\n    /**\n     * DELETE comment route\n     */\n\n    describe('DELETE /api/comments/:id', ()=>{\n        it('deletes comment on a post', (done)=>{\n            const commentId = cId\n            chai.request(server)\n            .delete(`/api/comments/${commentId}`)\n            .set('Authorization', 'Bearer ' + autToken )\n            .end((err, response)=>{\n                response.should.have.status(200);\n                \n            done();\n            })\n        })\n\n        it('handles when you want to delete non existing comment', (done)=>{\n            const commentId = \"625943e64e9dd47477f9be96\"\n            chai.request(server)\n            .delete(`/api/comments/${commentId}`)\n            .set('Authorization', 'Bearer ' + autToken )\n            .end((err, response)=>{\n                response.should.have.status(404);\n                response.body.should.have.property('message').eql(\"Comment doesn't exist\")\n            done();\n            })\n        })\n\n    })\n})    "]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"782e89ce800fddf3841eed765b904bdc0278bcd1"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_16vcbrdsdx=function(){return actualCoverage;};}return actualCoverage;}cov_16vcbrdsdx();var _mongoose=(cov_16vcbrdsdx().s[0]++,_interopRequireDefault(require("mongoose")));var _chai=(cov_16vcbrdsdx().s[1]++,_interopRequireDefault(require("chai")));var _index=(cov_16vcbrdsdx().s[2]++,_interopRequireDefault(require("../index")));var _chaiHttp=(cov_16vcbrdsdx().s[3]++,_interopRequireDefault(require("chai-http")));var _Post=(cov_16vcbrdsdx().s[4]++,require("../models/Post"));var _sinon=(cov_16vcbrdsdx().s[5]++,_interopRequireDefault(require("sinon")));var _User=(cov_16vcbrdsdx().s[6]++,require("../models/User"));function _interopRequireDefault(obj){cov_16vcbrdsdx().f[0]++;cov_16vcbrdsdx().s[7]++;return(cov_16vcbrdsdx().b[1][0]++,obj)&&(cov_16vcbrdsdx().b[1][1]++,obj.__esModule)?(cov_16vcbrdsdx().b[0][0]++,obj):(cov_16vcbrdsdx().b[0][1]++,{default:obj});}cov_16vcbrdsdx().s[8]++;require("dotenv").config();//to mock a function during testing
let user,autToken,id,cId;//assertion style
cov_16vcbrdsdx().s[9]++;_chai.default.should();cov_16vcbrdsdx().s[10]++;_chai.default.use(_chaiHttp.default);cov_16vcbrdsdx().s[11]++;describe('Test for Comment Endpoints',()=>{cov_16vcbrdsdx().f[1]++;cov_16vcbrdsdx().s[12]++;before(function(done){cov_16vcbrdsdx().f[2]++;// Connect to MongoDB database
const dbURI=(cov_16vcbrdsdx().s[13]++,`mongodb+srv://${process.env.DB_USER}:${process.env.DB_PASSWORD}@node-applications.fe4au.mongodb.net/node-tutorial?retryWrites=true&w=majority`);cov_16vcbrdsdx().s[14]++;_mongoose.default.connect(dbURI,{useNewUrlParser:true,useUnifiedTopology:true}).then(responseult=>{cov_16vcbrdsdx().f[3]++;cov_16vcbrdsdx().s[15]++;console.log('Db Connected!');cov_16vcbrdsdx().s[16]++;done();}).catch(error=>{cov_16vcbrdsdx().f[4]++;cov_16vcbrdsdx().s[17]++;console.log(error);});});/**
  * POST comment route
  */cov_16vcbrdsdx().s[18]++;describe('POST /api/posts/:id/comment',()=>{cov_16vcbrdsdx().f[5]++;cov_16vcbrdsdx().s[19]++;before(()=>{cov_16vcbrdsdx().f[6]++;cov_16vcbrdsdx().s[20]++;_mongoose.default.connection.dropCollection('users');cov_16vcbrdsdx().s[21]++;_mongoose.default.connection.dropCollection('comments');});// create user and login 
cov_16vcbrdsdx().s[22]++;it('creates new user ',done=>{cov_16vcbrdsdx().f[7]++;const newUser=(cov_16vcbrdsdx().s[23]++,new _User.User({username:"menase",email:"menase@mail.com",password:"password test"}));cov_16vcbrdsdx().s[24]++;_chai.default.request(_index.default).post("/api/users").send(newUser).end((err,response)=>{cov_16vcbrdsdx().f[8]++;cov_16vcbrdsdx().s[25]++;response.should.have.status(201);cov_16vcbrdsdx().s[26]++;response.body.should.be.a('object');cov_16vcbrdsdx().s[27]++;response.body.should.have.property('message').eql("user created!");cov_16vcbrdsdx().s[28]++;done();});});// login
const logInUser=(cov_16vcbrdsdx().s[29]++,{username:'menase',password:'password test'});cov_16vcbrdsdx().s[30]++;it('login a user',done=>{cov_16vcbrdsdx().f[9]++;cov_16vcbrdsdx().s[31]++;_chai.default.request(_index.default).post('/api/users/login').send({username:logInUser.username,password:logInUser.password}).end(function(err,response){cov_16vcbrdsdx().f[10]++;cov_16vcbrdsdx().s[32]++;if(err){cov_16vcbrdsdx().b[2][0]++;cov_16vcbrdsdx().s[33]++;return done(err);}else{cov_16vcbrdsdx().b[2][1]++;}cov_16vcbrdsdx().s[34]++;response.should.have.status(200);cov_16vcbrdsdx().s[35]++;response.body.should.be.a('object');cov_16vcbrdsdx().s[36]++;autToken=response.body.Token;cov_16vcbrdsdx().s[37]++;done();});});//post creation
cov_16vcbrdsdx().s[38]++;it("creates a new post",done=>{cov_16vcbrdsdx().f[11]++;const userToken=(cov_16vcbrdsdx().s[39]++,'Bearer '+autToken);const post=(cov_16vcbrdsdx().s[40]++,new _Post.Post({title:"unit testing",content:"I am testing nodejs api using mocha with chai assertion library"}));cov_16vcbrdsdx().s[41]++;post.save();cov_16vcbrdsdx().s[42]++;_chai.default.request(_index.default).post("/api/posts")//set the auth header with our token
.set('Authorization','Bearer '+autToken).send(post).end(function(error,response){cov_16vcbrdsdx().f[12]++;cov_16vcbrdsdx().s[43]++;response.should.have.status(201);cov_16vcbrdsdx().s[44]++;response.body.should.be.a('object');cov_16vcbrdsdx().s[45]++;response.body.should.have.property('message').eql("Post Saved successfully");cov_16vcbrdsdx().s[46]++;id=post.id;cov_16vcbrdsdx().s[47]++;done();});});cov_16vcbrdsdx().s[48]++;it('comment on a post',done=>{cov_16vcbrdsdx().f[13]++;const postId=(cov_16vcbrdsdx().s[49]++,id);const newComment=(cov_16vcbrdsdx().s[50]++,new _Post.Comment({postId,description:"testing a comment"}));cov_16vcbrdsdx().s[51]++;newComment.save();cov_16vcbrdsdx().s[52]++;_chai.default.request(_index.default).post(`/api/posts/${postId}/comment`).send(newComment).set('Authorization','Bearer '+autToken).end((err,response)=>{cov_16vcbrdsdx().f[14]++;cov_16vcbrdsdx().s[53]++;response.should.have.status(201);cov_16vcbrdsdx().s[54]++;response.body.should.be.a('object');cov_16vcbrdsdx().s[55]++;response.body.should.have.property('comment');cov_16vcbrdsdx().s[56]++;cId=newComment.id;cov_16vcbrdsdx().s[57]++;done();});});cov_16vcbrdsdx().s[58]++;it('handles when you want to comment on non existing post',done=>{cov_16vcbrdsdx().f[15]++;const postId=(cov_16vcbrdsdx().s[59]++,"62597f8412f8da13b4e0a385");const newComment=(cov_16vcbrdsdx().s[60]++,{postId,description:"testing a comment"});cov_16vcbrdsdx().s[61]++;_chai.default.request(_index.default).post(`/api/posts/${postId}/comment`).send(newComment).set('Authorization','Bearer '+autToken).end((err,response)=>{cov_16vcbrdsdx().f[16]++;cov_16vcbrdsdx().s[62]++;response.should.have.status(404);cov_16vcbrdsdx().s[63]++;response.body.should.be.a('object');cov_16vcbrdsdx().s[64]++;response.body.should.have.property('message').eql("Post not available");cov_16vcbrdsdx().s[65]++;done();});});});/**
   * GET comment route
  */cov_16vcbrdsdx().s[66]++;describe('GET /api/posts/:id/comment',()=>{cov_16vcbrdsdx().f[17]++;cov_16vcbrdsdx().s[67]++;it('shows all comments related to specific post',done=>{cov_16vcbrdsdx().f[18]++;const postId=(cov_16vcbrdsdx().s[68]++,id);cov_16vcbrdsdx().s[69]++;_chai.default.request(_index.default).get(`/api/posts/${postId}/comment`).send({postId}).end((err,response)=>{cov_16vcbrdsdx().f[19]++;cov_16vcbrdsdx().s[70]++;response.should.have.status(200);cov_16vcbrdsdx().s[71]++;response.body.should.have.a('object');cov_16vcbrdsdx().s[72]++;done();});});cov_16vcbrdsdx().s[73]++;it('show error when that post in not in DB',done=>{cov_16vcbrdsdx().f[20]++;const postId=(cov_16vcbrdsdx().s[74]++,"625b07c93cc2f2b0163f1a75");cov_16vcbrdsdx().s[75]++;_chai.default.request(_index.default).get(`/api/posts/${postId}/comment`).send({postId}).end((err,response)=>{cov_16vcbrdsdx().f[21]++;cov_16vcbrdsdx().s[76]++;response.should.have.status(404);cov_16vcbrdsdx().s[77]++;response.body.should.have.property('message').eql("post not found");cov_16vcbrdsdx().s[78]++;done();});});cov_16vcbrdsdx().s[79]++;it('shows individual comment',done=>{cov_16vcbrdsdx().f[22]++;const commentId=(cov_16vcbrdsdx().s[80]++,cId);cov_16vcbrdsdx().s[81]++;_chai.default.request(_index.default).get(`/api/comments/${commentId}`).send({commentId}).end((err,response)=>{cov_16vcbrdsdx().f[23]++;cov_16vcbrdsdx().s[82]++;response.should.have.status(200);cov_16vcbrdsdx().s[83]++;response.body.should.be.a('object');cov_16vcbrdsdx().s[84]++;response.body.should.have.property('comment');cov_16vcbrdsdx().s[85]++;done();});});cov_16vcbrdsdx().s[86]++;it('shows error for non existing comment',done=>{cov_16vcbrdsdx().f[24]++;const commentId=(cov_16vcbrdsdx().s[87]++,"625943e64e9dd47477f9be96");cov_16vcbrdsdx().s[88]++;_chai.default.request(_index.default).get(`/api/comments/${commentId}`).send({commentId}).end((err,response)=>{cov_16vcbrdsdx().f[25]++;cov_16vcbrdsdx().s[89]++;response.should.have.status(404);cov_16vcbrdsdx().s[90]++;response.body.should.be.a('object');cov_16vcbrdsdx().s[91]++;response.body.should.have.property('comment').eql("Comment Doesn't Exists");cov_16vcbrdsdx().s[92]++;done();});});});/**
   * DELETE comment route
   */cov_16vcbrdsdx().s[93]++;describe('DELETE /api/comments/:id',()=>{cov_16vcbrdsdx().f[26]++;cov_16vcbrdsdx().s[94]++;it('deletes comment on a post',done=>{cov_16vcbrdsdx().f[27]++;const commentId=(cov_16vcbrdsdx().s[95]++,cId);cov_16vcbrdsdx().s[96]++;_chai.default.request(_index.default).delete(`/api/comments/${commentId}`).set('Authorization','Bearer '+autToken).end((err,response)=>{cov_16vcbrdsdx().f[28]++;cov_16vcbrdsdx().s[97]++;response.should.have.status(200);cov_16vcbrdsdx().s[98]++;done();});});cov_16vcbrdsdx().s[99]++;it('handles when you want to delete non existing comment',done=>{cov_16vcbrdsdx().f[29]++;const commentId=(cov_16vcbrdsdx().s[100]++,"625943e64e9dd47477f9be96");cov_16vcbrdsdx().s[101]++;_chai.default.request(_index.default).delete(`/api/comments/${commentId}`).set('Authorization','Bearer '+autToken).end((err,response)=>{cov_16vcbrdsdx().f[30]++;cov_16vcbrdsdx().s[102]++;response.should.have.status(404);cov_16vcbrdsdx().s[103]++;response.body.should.have.property('message').eql("Comment doesn't exist");cov_16vcbrdsdx().s[104]++;done();});});});});//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//# sourceMappingURL=data:application/json;charset=utf-8;base64,