"use strict";function cov_1rq8eb77g4(){var path="/home/nyakamwe/Desktop/my-brand-nyakamwe/server/src/test/user_test.js";var hash="6379e0c5ef9374a97435b79ae042b361b257dbe9";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/home/nyakamwe/Desktop/my-brand-nyakamwe/server/src/test/user_test.js",statementMap:{"0":{start:{line:3,column:16},end:{line:3,column:59}},"1":{start:{line:5,column:12},end:{line:5,column:51}},"2":{start:{line:7,column:13},end:{line:7,column:56}},"3":{start:{line:9,column:16},end:{line:9,column:60}},"4":{start:{line:11,column:12},end:{line:11,column:37}},"5":{start:{line:13,column:13},end:{line:13,column:53}},"6":{start:{line:15,column:12},end:{line:15,column:37}},"7":{start:{line:17,column:39},end:{line:17,column:93}},"8":{start:{line:19,column:0},end:{line:19,column:27}},"9":{start:{line:24,column:0},end:{line:24,column:23}},"10":{start:{line:26,column:0},end:{line:26,column:37}},"11":{start:{line:28,column:0},end:{line:152,column:3}},"12":{start:{line:29,column:2},end:{line:42,column:5}},"13":{start:{line:31,column:18},end:{line:31,column:161}},"14":{start:{line:33,column:4},end:{line:41,column:7}},"15":{start:{line:37,column:6},end:{line:37,column:35}},"16":{start:{line:38,column:6},end:{line:38,column:13}},"17":{start:{line:40,column:6},end:{line:40,column:25}},"18":{start:{line:47,column:2},end:{line:93,column:5}},"19":{start:{line:48,column:4},end:{line:50,column:7}},"20":{start:{line:49,column:6},end:{line:49,column:59}},"21":{start:{line:51,column:4},end:{line:64,column:7}},"22":{start:{line:52,column:22},end:{line:56,column:8}},"23":{start:{line:58,column:6},end:{line:63,column:9}},"24":{start:{line:59,column:8},end:{line:59,column:41}},"25":{start:{line:60,column:8},end:{line:60,column:44}},"26":{start:{line:61,column:8},end:{line:61,column:75}},"27":{start:{line:62,column:8},end:{line:62,column:15}},"28":{start:{line:65,column:4},end:{line:78,column:7}},"29":{start:{line:66,column:6},end:{line:70,column:9}},"30":{start:{line:72,column:6},end:{line:77,column:9}},"31":{start:{line:73,column:8},end:{line:73,column:41}},"32":{start:{line:74,column:8},end:{line:74,column:44}},"33":{start:{line:75,column:8},end:{line:75,column:81}},"34":{start:{line:76,column:8},end:{line:76,column:15}},"35":{start:{line:79,column:4},end:{line:92,column:7}},"36":{start:{line:80,column:19},end:{line:84,column:8}},"37":{start:{line:86,column:6},end:{line:91,column:9}},"38":{start:{line:87,column:8},end:{line:87,column:41}},"39":{start:{line:88,column:8},end:{line:88,column:44}},"40":{start:{line:89,column:8},end:{line:89,column:85}},"41":{start:{line:90,column:8},end:{line:90,column:15}},"42":{start:{line:98,column:2},end:{line:151,column:5}},"43":{start:{line:99,column:4},end:{line:101,column:7}},"44":{start:{line:100,column:6},end:{line:100,column:59}},"45":{start:{line:102,column:22},end:{line:105,column:5}},"46":{start:{line:106,column:4},end:{line:117,column:7}},"47":{start:{line:107,column:6},end:{line:116,column:9}},"48":{start:{line:111,column:8},end:{line:111,column:34}},"49":{start:{line:111,column:17},end:{line:111,column:34}},"50":{start:{line:112,column:8},end:{line:112,column:41}},"51":{start:{line:113,column:8},end:{line:113,column:44}},"52":{start:{line:114,column:8},end:{line:114,column:39}},"53":{start:{line:115,column:8},end:{line:115,column:15}},"54":{start:{line:118,column:4},end:{line:134,column:7}},"55":{start:{line:119,column:24},end:{line:122,column:7}},"56":{start:{line:124,column:6},end:{line:133,column:9}},"57":{start:{line:128,column:8},end:{line:128,column:34}},"58":{start:{line:128,column:17},end:{line:128,column:34}},"59":{start:{line:129,column:8},end:{line:129,column:41}},"60":{start:{line:130,column:8},end:{line:130,column:44}},"61":{start:{line:131,column:8},end:{line:131,column:91}},"62":{start:{line:132,column:8},end:{line:132,column:15}},"63":{start:{line:135,column:4},end:{line:150,column:7}},"64":{start:{line:136,column:24},end:{line:139,column:7}},"65":{start:{line:141,column:6},end:{line:149,column:9}},"66":{start:{line:145,column:8},end:{line:145,column:34}},"67":{start:{line:145,column:17},end:{line:145,column:34}},"68":{start:{line:146,column:8},end:{line:146,column:41}},"69":{start:{line:147,column:8},end:{line:147,column:71}},"70":{start:{line:148,column:8},end:{line:148,column:15}}},fnMap:{"0":{name:"_interopRequireDefault",decl:{start:{line:17,column:9},end:{line:17,column:31}},loc:{start:{line:17,column:37},end:{line:17,column:95}},line:17},"1":{name:"(anonymous_1)",decl:{start:{line:28,column:36},end:{line:28,column:37}},loc:{start:{line:28,column:42},end:{line:152,column:1}},line:28},"2":{name:"(anonymous_2)",decl:{start:{line:29,column:9},end:{line:29,column:10}},loc:{start:{line:29,column:25},end:{line:42,column:3}},line:29},"3":{name:"(anonymous_3)",decl:{start:{line:36,column:12},end:{line:36,column:13}},loc:{start:{line:36,column:27},end:{line:39,column:5}},line:36},"4":{name:"(anonymous_4)",decl:{start:{line:39,column:13},end:{line:39,column:14}},loc:{start:{line:39,column:22},end:{line:41,column:5}},line:39},"5":{name:"(anonymous_5)",decl:{start:{line:47,column:30},end:{line:47,column:31}},loc:{start:{line:47,column:36},end:{line:93,column:3}},line:47},"6":{name:"(anonymous_6)",decl:{start:{line:48,column:11},end:{line:48,column:12}},loc:{start:{line:48,column:17},end:{line:50,column:5}},line:48},"7":{name:"(anonymous_7)",decl:{start:{line:51,column:28},end:{line:51,column:29}},loc:{start:{line:51,column:36},end:{line:64,column:5}},line:51},"8":{name:"(anonymous_8)",decl:{start:{line:58,column:81},end:{line:58,column:82}},loc:{start:{line:58,column:100},end:{line:63,column:7}},line:58},"9":{name:"(anonymous_9)",decl:{start:{line:65,column:22},end:{line:65,column:23}},loc:{start:{line:65,column:30},end:{line:78,column:5}},line:65},"10":{name:"(anonymous_10)",decl:{start:{line:72,column:78},end:{line:72,column:79}},loc:{start:{line:72,column:97},end:{line:77,column:7}},line:72},"11":{name:"(anonymous_11)",decl:{start:{line:79,column:59},end:{line:79,column:60}},loc:{start:{line:79,column:67},end:{line:92,column:5}},line:79},"12":{name:"(anonymous_12)",decl:{start:{line:86,column:78},end:{line:86,column:79}},loc:{start:{line:86,column:97},end:{line:91,column:7}},line:86},"13":{name:"(anonymous_13)",decl:{start:{line:98,column:36},end:{line:98,column:37}},loc:{start:{line:98,column:42},end:{line:151,column:3}},line:98},"14":{name:"(anonymous_14)",decl:{start:{line:99,column:10},end:{line:99,column:11}},loc:{start:{line:99,column:16},end:{line:101,column:5}},line:99},"15":{name:"(anonymous_15)",decl:{start:{line:106,column:23},end:{line:106,column:24}},loc:{start:{line:106,column:31},end:{line:117,column:5}},line:106},"16":{name:"(anonymous_16)",decl:{start:{line:110,column:13},end:{line:110,column:14}},loc:{start:{line:110,column:38},end:{line:116,column:7}},line:110},"17":{name:"(anonymous_17)",decl:{start:{line:118,column:54},end:{line:118,column:55}},loc:{start:{line:118,column:62},end:{line:134,column:5}},line:118},"18":{name:"(anonymous_18)",decl:{start:{line:127,column:13},end:{line:127,column:14}},loc:{start:{line:127,column:38},end:{line:133,column:7}},line:127},"19":{name:"(anonymous_19)",decl:{start:{line:135,column:35},end:{line:135,column:36}},loc:{start:{line:135,column:43},end:{line:150,column:5}},line:135},"20":{name:"(anonymous_20)",decl:{start:{line:144,column:13},end:{line:144,column:14}},loc:{start:{line:144,column:38},end:{line:149,column:7}},line:144}},branchMap:{"0":{loc:{start:{line:17,column:46},end:{line:17,column:92}},type:"cond-expr",locations:[{start:{line:17,column:70},end:{line:17,column:73}},{start:{line:17,column:76},end:{line:17,column:92}}],line:17},"1":{loc:{start:{line:17,column:46},end:{line:17,column:67}},type:"binary-expr",locations:[{start:{line:17,column:46},end:{line:17,column:49}},{start:{line:17,column:53},end:{line:17,column:67}}],line:17},"2":{loc:{start:{line:111,column:8},end:{line:111,column:34}},type:"if",locations:[{start:{line:111,column:8},end:{line:111,column:34}},{start:{line:111,column:8},end:{line:111,column:34}}],line:111},"3":{loc:{start:{line:128,column:8},end:{line:128,column:34}},type:"if",locations:[{start:{line:128,column:8},end:{line:128,column:34}},{start:{line:128,column:8},end:{line:128,column:34}}],line:128},"4":{loc:{start:{line:145,column:8},end:{line:145,column:34}},type:"if",locations:[{start:{line:145,column:8},end:{line:145,column:34}},{start:{line:145,column:8},end:{line:145,column:34}}],line:145}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0},b:{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0]},inputSourceMap:{version:3,sources:["user_test.js"],names:["require","config","user","autToken","chai","should","use","chaiHttp","describe","before","done","dbURI","process","env","DB_USER","DB_PASSWORD","mongoose","connect","useNewUrlParser","useUnifiedTopology","then","responseult","console","log","catch","error","connection","dropCollection","it","newUser","User","username","email","password","request","server","post","send","end","err","response","have","status","body","be","a","property","eql","after","logInUser","Token"],mappings:"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",sourceRoot:"/home/nyakamwe/Desktop/my-brand-nyakamwe/server/src/test/",sourcesContent:["import mongoose from 'mongoose';\nimport chai from 'chai';\nimport server from \"../index\";\nimport chaiHttp from \"chai-http\";\nimport {Post} from \"../models/Post\";\nrequire(\"dotenv\").config();\n\n\n//to mock a function during testing\nimport sinon from 'sinon'\nimport { User } from '../models/User';\n\nlet user, autToken;\n\n//assertion style\nchai.should();\n\nchai.use(chaiHttp)  \n    \n    \ndescribe('Test for User Endpoints', ()=>{\n    before(function(done) {\n        // Connect to MongoDB database\n    const dbURI =`mongodb+srv://${process.env.DB_USER}:${process.env.DB_PASSWORD}@node-applications.fe4au.mongodb.net/node-tutorial?retryWrites=true&w=majority`\n    mongoose.connect(dbURI,{useNewUrlParser:true, useUnifiedTopology:true}).then((responseult)=>{\n\n            console.log('Db Connected!')\n            \n\n            done();\n            \n        }).catch((error)=>{\n            console.log(error)\n        })\n    \n     \n\n    });\n    \n    \n\n    /**\n     * Test create new user\n     */\n\n     describe('POST /api/users', ()=>{\n        before(()=>{\n            mongoose.connection.dropCollection(\"users\");\n        })\n\n        it('creates new user ', (done)=>{\n\n            const newUser = new User({\n                username:\"menase\",\n                email:\"menase@mail.com\",\n                password:\"password test\"\n           \n            })\n\n            chai.request(server)\n            .post(\"/api/users\")\n            .send(newUser)\n            .end((err, response)=>{\n                response.should.have.status(201);\n                response.body.should.be.a('object');\n                response.body.should.have.property('message').eql(\"user created!\");\n            done();   \n            })\n        })\n\n\n        it('User exists', (done)=>{\n\n            user = new User({\n                username:\"menase\",\n                email:\"menase@mail.com\",\n                password:\"password test\"\n           \n            })\n\n            chai.request(server)\n            .post(\"/api/users\")\n            .send(user)\n            .end((err, response)=>{\n                response.should.have.status(403);\n                response.body.should.be.a('object');\n                response.body.should.have.property('message').eql(\"user already exists\");\n            done();   \n            })\n\n        })\n\n        it('No new user without username, email or password ', (done)=>{\n\n            const user = new User({\n                username:\"\",\n                email:\"\",\n                password:\"\"\n           \n            })\n\n            chai.request(server)\n            .post(\"/api/users\")\n            .send(user)\n            .end((err, response)=>{\n                response.should.have.status(403);\n                response.body.should.be.a('object');\n                response.body.should.have.property('message').eql(\"All fields are required\");\n            done();   \n            })\n        })\n\n    })\n\n    /**\n     * POST User login\n     */\n\n     describe('POST /api/users/login', ()=>{\n         after(()=>{\n             mongoose.connection.dropCollection('users')\n         })\n       \n        const logInUser = {\n            username:'menase',\n            password:'password test'\n        }\n\n        it('login a user', (done)=>{\n            chai.request(server)\n            .post('/api/users/login')\n            .send({username:logInUser.username, password:logInUser.password})\n            .end(function(err, response) {\n                if (err) return done(err);\n\n                response.should.have.status(200);\n                response.body.should.be.a('object');\n                autToken = response.body.Token\n                \n                done();\n            });\n\n        })\n\n        it('not login a user with incorrect credentials', (done)=>{\n            const logInUser = {\n                username:'menase',\n                password:'password'\n            }\n            chai.request(server)\n            .post('/api/users/login')\n            .send({username:logInUser.username, password:logInUser.password})\n            .end(function(err, response) {\n                if (err) return done(err);\n\n                response.should.have.status(403);\n                response.body.should.be.a('object');\n                response.body.should.have.property('message').eql(\"Invalid username or password.\");\n            done();   \n            });\n\n        })\n\n        it('not login anonymous user', (done)=>{\n            const logInUser = {\n                username:'hereweare',\n                password:'hereweare'\n            }\n            chai.request(server)\n            .post('/api/users/login')\n            .send({username:logInUser.username, password:logInUser.password})\n            .end(function(err, response) {\n                if (err) return done(err);\n\n                response.should.have.status(400);\n                response.body.should.have.property('message').eql(\"Not User.\");\n            done();   \n            });\n\n        })\n\n\n       \n    })\n\n})    "]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"6379e0c5ef9374a97435b79ae042b361b257dbe9"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_1rq8eb77g4=function(){return actualCoverage;};}return actualCoverage;}cov_1rq8eb77g4();var _mongoose=(cov_1rq8eb77g4().s[0]++,_interopRequireDefault(require("mongoose")));var _chai=(cov_1rq8eb77g4().s[1]++,_interopRequireDefault(require("chai")));var _index=(cov_1rq8eb77g4().s[2]++,_interopRequireDefault(require("../index")));var _chaiHttp=(cov_1rq8eb77g4().s[3]++,_interopRequireDefault(require("chai-http")));var _Post=(cov_1rq8eb77g4().s[4]++,require("../models/Post"));var _sinon=(cov_1rq8eb77g4().s[5]++,_interopRequireDefault(require("sinon")));var _User=(cov_1rq8eb77g4().s[6]++,require("../models/User"));function _interopRequireDefault(obj){cov_1rq8eb77g4().f[0]++;cov_1rq8eb77g4().s[7]++;return(cov_1rq8eb77g4().b[1][0]++,obj)&&(cov_1rq8eb77g4().b[1][1]++,obj.__esModule)?(cov_1rq8eb77g4().b[0][0]++,obj):(cov_1rq8eb77g4().b[0][1]++,{default:obj});}cov_1rq8eb77g4().s[8]++;require("dotenv").config();//to mock a function during testing
let user,autToken;//assertion style
cov_1rq8eb77g4().s[9]++;_chai.default.should();cov_1rq8eb77g4().s[10]++;_chai.default.use(_chaiHttp.default);cov_1rq8eb77g4().s[11]++;describe('Test for User Endpoints',()=>{cov_1rq8eb77g4().f[1]++;cov_1rq8eb77g4().s[12]++;before(function(done){cov_1rq8eb77g4().f[2]++;// Connect to MongoDB database
const dbURI=(cov_1rq8eb77g4().s[13]++,`mongodb+srv://${process.env.DB_USER}:${process.env.DB_PASSWORD}@node-applications.fe4au.mongodb.net/node-tutorial?retryWrites=true&w=majority`);cov_1rq8eb77g4().s[14]++;_mongoose.default.connect(dbURI,{useNewUrlParser:true,useUnifiedTopology:true}).then(responseult=>{cov_1rq8eb77g4().f[3]++;cov_1rq8eb77g4().s[15]++;console.log('Db Connected!');cov_1rq8eb77g4().s[16]++;done();}).catch(error=>{cov_1rq8eb77g4().f[4]++;cov_1rq8eb77g4().s[17]++;console.log(error);});});/**
   * Test create new user
   */cov_1rq8eb77g4().s[18]++;describe('POST /api/users',()=>{cov_1rq8eb77g4().f[5]++;cov_1rq8eb77g4().s[19]++;before(()=>{cov_1rq8eb77g4().f[6]++;cov_1rq8eb77g4().s[20]++;_mongoose.default.connection.dropCollection("users");});cov_1rq8eb77g4().s[21]++;it('creates new user ',done=>{cov_1rq8eb77g4().f[7]++;const newUser=(cov_1rq8eb77g4().s[22]++,new _User.User({username:"menase",email:"menase@mail.com",password:"password test"}));cov_1rq8eb77g4().s[23]++;_chai.default.request(_index.default).post("/api/users").send(newUser).end((err,response)=>{cov_1rq8eb77g4().f[8]++;cov_1rq8eb77g4().s[24]++;response.should.have.status(201);cov_1rq8eb77g4().s[25]++;response.body.should.be.a('object');cov_1rq8eb77g4().s[26]++;response.body.should.have.property('message').eql("user created!");cov_1rq8eb77g4().s[27]++;done();});});cov_1rq8eb77g4().s[28]++;it('User exists',done=>{cov_1rq8eb77g4().f[9]++;cov_1rq8eb77g4().s[29]++;user=new _User.User({username:"menase",email:"menase@mail.com",password:"password test"});cov_1rq8eb77g4().s[30]++;_chai.default.request(_index.default).post("/api/users").send(user).end((err,response)=>{cov_1rq8eb77g4().f[10]++;cov_1rq8eb77g4().s[31]++;response.should.have.status(403);cov_1rq8eb77g4().s[32]++;response.body.should.be.a('object');cov_1rq8eb77g4().s[33]++;response.body.should.have.property('message').eql("user already exists");cov_1rq8eb77g4().s[34]++;done();});});cov_1rq8eb77g4().s[35]++;it('No new user without username, email or password ',done=>{cov_1rq8eb77g4().f[11]++;const user=(cov_1rq8eb77g4().s[36]++,new _User.User({username:"",email:"",password:""}));cov_1rq8eb77g4().s[37]++;_chai.default.request(_index.default).post("/api/users").send(user).end((err,response)=>{cov_1rq8eb77g4().f[12]++;cov_1rq8eb77g4().s[38]++;response.should.have.status(403);cov_1rq8eb77g4().s[39]++;response.body.should.be.a('object');cov_1rq8eb77g4().s[40]++;response.body.should.have.property('message').eql("All fields are required");cov_1rq8eb77g4().s[41]++;done();});});});/**
   * POST User login
   */cov_1rq8eb77g4().s[42]++;describe('POST /api/users/login',()=>{cov_1rq8eb77g4().f[13]++;cov_1rq8eb77g4().s[43]++;after(()=>{cov_1rq8eb77g4().f[14]++;cov_1rq8eb77g4().s[44]++;_mongoose.default.connection.dropCollection('users');});const logInUser=(cov_1rq8eb77g4().s[45]++,{username:'menase',password:'password test'});cov_1rq8eb77g4().s[46]++;it('login a user',done=>{cov_1rq8eb77g4().f[15]++;cov_1rq8eb77g4().s[47]++;_chai.default.request(_index.default).post('/api/users/login').send({username:logInUser.username,password:logInUser.password}).end(function(err,response){cov_1rq8eb77g4().f[16]++;cov_1rq8eb77g4().s[48]++;if(err){cov_1rq8eb77g4().b[2][0]++;cov_1rq8eb77g4().s[49]++;return done(err);}else{cov_1rq8eb77g4().b[2][1]++;}cov_1rq8eb77g4().s[50]++;response.should.have.status(200);cov_1rq8eb77g4().s[51]++;response.body.should.be.a('object');cov_1rq8eb77g4().s[52]++;autToken=response.body.Token;cov_1rq8eb77g4().s[53]++;done();});});cov_1rq8eb77g4().s[54]++;it('not login a user with incorrect credentials',done=>{cov_1rq8eb77g4().f[17]++;const logInUser=(cov_1rq8eb77g4().s[55]++,{username:'menase',password:'password'});cov_1rq8eb77g4().s[56]++;_chai.default.request(_index.default).post('/api/users/login').send({username:logInUser.username,password:logInUser.password}).end(function(err,response){cov_1rq8eb77g4().f[18]++;cov_1rq8eb77g4().s[57]++;if(err){cov_1rq8eb77g4().b[3][0]++;cov_1rq8eb77g4().s[58]++;return done(err);}else{cov_1rq8eb77g4().b[3][1]++;}cov_1rq8eb77g4().s[59]++;response.should.have.status(403);cov_1rq8eb77g4().s[60]++;response.body.should.be.a('object');cov_1rq8eb77g4().s[61]++;response.body.should.have.property('message').eql("Invalid username or password.");cov_1rq8eb77g4().s[62]++;done();});});cov_1rq8eb77g4().s[63]++;it('not login anonymous user',done=>{cov_1rq8eb77g4().f[19]++;const logInUser=(cov_1rq8eb77g4().s[64]++,{username:'hereweare',password:'hereweare'});cov_1rq8eb77g4().s[65]++;_chai.default.request(_index.default).post('/api/users/login').send({username:logInUser.username,password:logInUser.password}).end(function(err,response){cov_1rq8eb77g4().f[20]++;cov_1rq8eb77g4().s[66]++;if(err){cov_1rq8eb77g4().b[4][0]++;cov_1rq8eb77g4().s[67]++;return done(err);}else{cov_1rq8eb77g4().b[4][1]++;}cov_1rq8eb77g4().s[68]++;response.should.have.status(400);cov_1rq8eb77g4().s[69]++;response.body.should.have.property('message').eql("Not User.");cov_1rq8eb77g4().s[70]++;done();});});});});//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//# sourceMappingURL=data:application/json;charset=utf-8;base64,