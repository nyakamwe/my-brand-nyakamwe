{"version":3,"sources":["commentControllers.js"],"names":["comment_one","req","res","id","params","post","Post","findById","newComment","Comment","create","postId","description","body","comment","comments","push","save","status","json","message","comment_get_all","find","length","error","comment_get_one","commentId","comment_delete","deleteOne"],"mappings":"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","sourceRoot":"/home/nyakamwe/Desktop/my-brand-nyakamwe/server/src/controllers/","sourcesContent":["import {Post,Comment} from '../models/Post'\n\n\n//comment on a post\nconst comment_one = async (req, res)=>{\n\tconst id = req.params.id;\n\tconst post = await Post.findById(id);\n\n\tif (post !== null){\n\t\t//create comment\n\t\tconst newComment = await Comment.create({\n\t\t\tpostId:id,\n\t\t\tdescription: req.body.comment\n\t\t});\n\n\t\tpost.comments.push(newComment);\n\t\tawait post.save()\n\t\treturn res.status(201).json({comment:newComment})\n\t\t\n\t}else{\n\t\treturn res.status(404).json({message:\"Post not available\"})\n\t}\n}\n\n// get all comments of a post\nconst comment_get_all = async (req, res)=>{\n\ttry {\n\t\tconst postId= req.params.id;\n\t\tconst post = await Post.findById(postId);\n\t\tif(post == null) return res.status(404).json({message:\"post not found\"});\n\t\t\n\t\tconst comments = await Comment.find({postId:postId});\n\n\t\tif(comments.length > 0){\n            \n\t\t\treturn res.status(200).json({comments});\n\t\t}else{\n\t\t\treturn res.status(404).json({comment:\"no comments related to this post\"});\n\t\t}\n\t\n\t} catch (error) {\n\t\treturn res.status(404).json({message:error.message})\n\t}\n\t\n}\n\n// get one comment\nconst comment_get_one = async (req, res)=>{\n\t\n\ttry {\n\t\tconst commentId = req.params.id;\n\t\tconst comment = await Comment.findById(commentId)\n\t\tif(comment != null ){\n\t\t\treturn res.status(200).json({comment})\n\t\t}\n\n\t\treturn res.status(404).json({comment:\"Comment Doesn't Exists\"})\n\n\t} catch (error) {\n\t\treturn res.status(404).json({comment:\"Comment Doesn't Exists\"})\n\t}\n\t\n\n}\n\n// delete a comment\nconst comment_delete = async (req, res)=>{\n\t\n\ttry {\n\t\tconst commentId = req.params.id;\n\t\tconst comment = await Comment.findById(commentId)\n\t\tif(comment != null ){\n\n\t\t\t// delete a comment\n\t\t\tawait Comment.deleteOne(comment)\n\n\t\t\treturn res.status(200).json({message:\"Comment deleted\"})\n\t\t\t\n\t\t}\n\t\t\n\t\treturn res.status(404).json({message:\"Comment doesn't exist\"})\n\t\t\n\n\t} catch (error) {\n\t\treturn res.status(500).json({comment:\"Internal server error\"})\n\t}\n\t\n\n}\n\nexport {comment_one,comment_get_all,comment_get_one,comment_delete}"]}