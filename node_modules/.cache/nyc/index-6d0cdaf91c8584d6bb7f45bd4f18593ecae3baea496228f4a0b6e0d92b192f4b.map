{"version":3,"sources":["index.js"],"names":["require","config","options","definition","openapi","info","title","version","description","servers","url","process","env","PORT","apis","swaggerSpec","port","app","use","express","json","routes","userroutes","contactroutes","commentroutes","likeroutes","swaggerUI","serve","setup","static","urlencoded","extended","dbURI","DB_USER","DB_PASSWORD","mongoose","connect","useNewUrlParser","useUnifiedTopology","then","result","console","log","catch","error","listen"],"mappings":";;;;;;;AAAA;;AACA;;AAIA;;AACA;;AAwBA;;AAIA;;AACA;;AACA;;AACA;;AACA;;;;AAnCAA,OAAO,CAAC,QAAD,CAAP,CAAkBC,MAAlB;;AAKA,MAAMC,OAAO,GAAC;AACVC,EAAAA,UAAU,EAAC;AACPC,IAAAA,OAAO,EAAC,OADD;AAEPC,IAAAA,IAAI,EAAC;AACDC,MAAAA,KAAK,EAAC,UADL;AAEDC,MAAAA,OAAO,EAAC,OAFP;AAGDC,MAAAA,WAAW,EAAC;AAHX,KAFE;AAOPC,IAAAA,OAAO,EAAC,CACJ;AACIC,MAAAA,GAAG,EAAG,oBAAmBC,OAAO,CAACC,GAAR,CAAYC,IAAK;AAD9C,KADI;AAPD,GADD;AAeVC,EAAAA,IAAI,EAAC,CAAC,eAAD;AAfK,CAAd;AAmBA,MAAMC,WAAW,GAAG,2BAAcb,OAAd,CAApB,C,CACA;;AAGA,MAAMc,IAAI,GAAGL,OAAO,CAACC,GAAR,CAAYC,IAAZ,IAAoB,IAAjC,C,CAEA;;AAOA;AACA,MAAMI,GAAG,GAAE,uBAAX,C,CAEA;;AACAA,GAAG,CAACC,GAAJ,CAAQC,iBAAQC,IAAR,EAAR,E,CAIA;;AACAH,GAAG,CAACC,GAAJ,CAAQ,MAAR,EAAgBG,mBAAhB;AACAJ,GAAG,CAACC,GAAJ,CAAQ,MAAR,EAAgBI,mBAAhB;AACAL,GAAG,CAACC,GAAJ,CAAQ,MAAR,EAAgBK,sBAAhB;AACAN,GAAG,CAACC,GAAJ,CAAQ,MAAR,EAAgBM,sBAAhB;AACAP,GAAG,CAACC,GAAJ,CAAQ,MAAR,EAAgBO,mBAAhB;AAEAR,GAAG,CAACC,GAAJ,CAAQ,WAAR,EAAqBQ,0BAAUC,KAA/B,EAAsCD,0BAAUE,KAAV,CAAgBb,WAAhB,CAAtC;AAEAE,GAAG,CAACC,GAAJ,CAAQ,SAAR,EAAmBC,iBAAQU,MAAR,CAAe,qBAAf,CAAnB;AAEAZ,GAAG,CAACC,GAAJ,CAAQC,iBAAQW,UAAR,CAAmB;AAACC,EAAAA,QAAQ,EAAC;AAAV,CAAnB,CAAR;AACAd,GAAG,CAACC,GAAJ,CAAQ,oBAAR,E,CACA;;AACA,MAAMc,KAAK,GAAG,iBAAgBrB,OAAO,CAACC,GAAR,CAAYqB,OAAQ,IAAGtB,OAAO,CAACC,GAAR,CAAYsB,WAAY,gFAA7E;;AACAC,mBAASC,OAAT,CAAiBJ,KAAjB,EAAuB;AAACK,EAAAA,eAAe,EAAC,IAAjB;AAAuBC,EAAAA,kBAAkB,EAAC;AAA1C,CAAvB,EAAwEC,IAAxE,CAA8EC,MAAD,IAAU;AAE/EC,EAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AAEH,CAJL,EAIOC,KAJP,CAIcC,KAAD,IAAS;AACdH,EAAAA,OAAO,CAACC,GAAR,CAAYE,KAAZ;AACH,CANL,E,CAQA;;;eACe3B,GAAG,CAAC4B,MAAJ,CAAW7B,IAAX,EAAiB,MAAI;AAChCyB,EAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ;AAEH,CAHc,C","sourceRoot":"/home/nyakamwe/Desktop/my-brand-nyakamwe/server/src/","sourcesContent":["import express from 'express'\nimport cors from 'cors'\n\nrequire(\"dotenv\").config();\n\nimport swaggerUI from 'swagger-ui-express'\nimport swaggerJSDocs from 'swagger-jsdoc';\n\nconst options={\n    definition:{\n        openapi:\"3.0.0\",\n        info:{\n            title:\"Blog API\",\n            version:\"1.0.0\",\n            description:\"A NodeJs -MongoDB Api\"\n        },\n        servers:[\n            {\n                url: `http://localhost:${process.env.PORT}`\n            }\n        ],\n        \n    },\n    apis:['./routes/*.js']\n}\n\n\nconst swaggerSpec = swaggerJSDocs(options);\n// console.log(swaggerSpec)\n\nimport {mongoose} from 'mongoose'\nconst port = process.env.PORT || 3000\n\n// getting routes\nimport routes from \"./routes/PostRoutes\"\nimport userroutes from \"./routes/UserRoutes\"\nimport contactroutes from \"./routes/MessageRoutes\"\nimport commentroutes from \"./routes/CommentRoutes\"\nimport likeroutes from \"./routes/LikeRoutes\"\n\n//creating express app\nconst app =express();\n\n// allow to pass json into body\napp.use(express.json());\n\n\n\n//routing routes\napp.use(\"/api\", routes);\napp.use(\"/api\", userroutes);\napp.use(\"/api\", contactroutes);\napp.use(\"/api\", commentroutes);\napp.use(\"/api\", likeroutes);\n\napp.use('/api-docs', swaggerUI.serve, swaggerUI.setup(swaggerSpec));\n\napp.use(\"/poster\", express.static(\"uploads/blog/images\"))\n\napp.use(express.urlencoded({extended:true}))\napp.use(cors())\n// Connect to MongoDB database\nconst dbURI =`mongodb+srv://${process.env.DB_USER}:${process.env.DB_PASSWORD}@node-applications.fe4au.mongodb.net/node-tutorial?retryWrites=true&w=majority`\nmongoose.connect(dbURI,{useNewUrlParser:true, useUnifiedTopology:true}).then((result)=>{\n\n        console.log('Db Connected!')\n\t\t\n    }).catch((error)=>{\n        console.log(error)\n    })\n    \n//listening to the request on server\nexport default app.listen(port, ()=>{\n    console.log('Server started listening')\n  \n});    \n\n\n\n\n\n"]}