"use strict";function cov_23ucov19zy(){var path="/home/nyakamwe/Desktop/my-brand-nyakamwe/server/src/test/blog_test.js";var hash="8249671863b49b0c29ccfd6059ef97724f61da7b";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/home/nyakamwe/Desktop/my-brand-nyakamwe/server/src/test/blog_test.js",statementMap:{"0":{start:{line:3,column:16},end:{line:3,column:59}},"1":{start:{line:5,column:12},end:{line:5,column:51}},"2":{start:{line:7,column:13},end:{line:7,column:56}},"3":{start:{line:9,column:16},end:{line:9,column:60}},"4":{start:{line:11,column:12},end:{line:11,column:37}},"5":{start:{line:13,column:13},end:{line:13,column:53}},"6":{start:{line:15,column:12},end:{line:15,column:37}},"7":{start:{line:17,column:39},end:{line:17,column:93}},"8":{start:{line:19,column:0},end:{line:19,column:27}},"9":{start:{line:24,column:0},end:{line:24,column:23}},"10":{start:{line:26,column:0},end:{line:26,column:37}},"11":{start:{line:28,column:0},end:{line:484,column:3}},"12":{start:{line:29,column:2},end:{line:42,column:5}},"13":{start:{line:31,column:18},end:{line:31,column:161}},"14":{start:{line:33,column:4},end:{line:41,column:7}},"15":{start:{line:37,column:6},end:{line:37,column:35}},"16":{start:{line:38,column:6},end:{line:38,column:13}},"17":{start:{line:40,column:6},end:{line:40,column:25}},"18":{start:{line:47,column:2},end:{line:61,column:5}},"19":{start:{line:48,column:4},end:{line:54,column:7}},"20":{start:{line:49,column:6},end:{line:53,column:9}},"21":{start:{line:50,column:8},end:{line:50,column:41}},"22":{start:{line:51,column:8},end:{line:51,column:67}},"23":{start:{line:52,column:8},end:{line:52,column:15}},"24":{start:{line:55,column:4},end:{line:60,column:7}},"25":{start:{line:56,column:6},end:{line:59,column:9}},"26":{start:{line:57,column:8},end:{line:57,column:46}},"27":{start:{line:58,column:8},end:{line:58,column:15}},"28":{start:{line:66,column:2},end:{line:86,column:5}},"29":{start:{line:67,column:4},end:{line:76,column:7}},"30":{start:{line:68,column:21},end:{line:68,column:47}},"31":{start:{line:70,column:6},end:{line:75,column:9}},"32":{start:{line:71,column:8},end:{line:71,column:41}},"33":{start:{line:72,column:8},end:{line:72,column:44}},"34":{start:{line:73,column:8},end:{line:73,column:67}},"35":{start:{line:74,column:8},end:{line:74,column:15}},"36":{start:{line:77,column:4},end:{line:85,column:7}},"37":{start:{line:78,column:21},end:{line:78,column:47}},"38":{start:{line:80,column:6},end:{line:84,column:9}},"39":{start:{line:81,column:8},end:{line:81,column:46}},"40":{start:{line:82,column:8},end:{line:82,column:70}},"41":{start:{line:83,column:8},end:{line:83,column:15}},"42":{start:{line:91,column:2},end:{line:134,column:5}},"43":{start:{line:92,column:4},end:{line:105,column:7}},"44":{start:{line:93,column:22},end:{line:97,column:8}},"45":{start:{line:99,column:6},end:{line:104,column:9}},"46":{start:{line:100,column:8},end:{line:100,column:41}},"47":{start:{line:101,column:8},end:{line:101,column:44}},"48":{start:{line:102,column:8},end:{line:102,column:75}},"49":{start:{line:103,column:8},end:{line:103,column:15}},"50":{start:{line:106,column:4},end:{line:119,column:7}},"51":{start:{line:107,column:6},end:{line:111,column:9}},"52":{start:{line:113,column:6},end:{line:118,column:9}},"53":{start:{line:114,column:8},end:{line:114,column:41}},"54":{start:{line:115,column:8},end:{line:115,column:44}},"55":{start:{line:116,column:8},end:{line:116,column:81}},"56":{start:{line:117,column:8},end:{line:117,column:15}},"57":{start:{line:120,column:4},end:{line:133,column:7}},"58":{start:{line:121,column:19},end:{line:125,column:8}},"59":{start:{line:127,column:6},end:{line:132,column:9}},"60":{start:{line:128,column:8},end:{line:128,column:41}},"61":{start:{line:129,column:8},end:{line:129,column:44}},"62":{start:{line:130,column:8},end:{line:130,column:85}},"63":{start:{line:131,column:8},end:{line:131,column:15}},"64":{start:{line:139,column:2},end:{line:189,column:5}},"65":{start:{line:140,column:22},end:{line:143,column:5}},"66":{start:{line:144,column:4},end:{line:155,column:7}},"67":{start:{line:145,column:6},end:{line:154,column:9}},"68":{start:{line:149,column:8},end:{line:149,column:34}},"69":{start:{line:149,column:17},end:{line:149,column:34}},"70":{start:{line:150,column:8},end:{line:150,column:41}},"71":{start:{line:151,column:8},end:{line:151,column:44}},"72":{start:{line:152,column:8},end:{line:152,column:39}},"73":{start:{line:153,column:8},end:{line:153,column:15}},"74":{start:{line:156,column:4},end:{line:172,column:7}},"75":{start:{line:157,column:24},end:{line:160,column:7}},"76":{start:{line:162,column:6},end:{line:171,column:9}},"77":{start:{line:166,column:8},end:{line:166,column:34}},"78":{start:{line:166,column:17},end:{line:166,column:34}},"79":{start:{line:167,column:8},end:{line:167,column:41}},"80":{start:{line:168,column:8},end:{line:168,column:44}},"81":{start:{line:169,column:8},end:{line:169,column:91}},"82":{start:{line:170,column:8},end:{line:170,column:15}},"83":{start:{line:173,column:4},end:{line:188,column:7}},"84":{start:{line:174,column:24},end:{line:177,column:7}},"85":{start:{line:179,column:6},end:{line:187,column:9}},"86":{start:{line:183,column:8},end:{line:183,column:34}},"87":{start:{line:183,column:17},end:{line:183,column:34}},"88":{start:{line:184,column:8},end:{line:184,column:41}},"89":{start:{line:185,column:8},end:{line:185,column:71}},"90":{start:{line:186,column:8},end:{line:186,column:15}},"91":{start:{line:194,column:2},end:{line:237,column:5}},"92":{start:{line:195,column:4},end:{line:209,column:7}},"93":{start:{line:196,column:24},end:{line:196,column:44}},"94":{start:{line:197,column:19},end:{line:200,column:8}},"95":{start:{line:202,column:6},end:{line:208,column:9}},"96":{start:{line:204,column:8},end:{line:204,column:41}},"97":{start:{line:205,column:8},end:{line:205,column:44}},"98":{start:{line:206,column:8},end:{line:206,column:85}},"99":{start:{line:207,column:8},end:{line:207,column:15}},"100":{start:{line:210,column:22},end:{line:210,column:42}},"101":{start:{line:211,column:4},end:{line:223,column:7}},"102":{start:{line:212,column:19},end:{line:215,column:8}},"103":{start:{line:217,column:6},end:{line:222,column:9}},"104":{start:{line:219,column:8},end:{line:219,column:41}},"105":{start:{line:220,column:8},end:{line:220,column:75}},"106":{start:{line:221,column:8},end:{line:221,column:15}},"107":{start:{line:224,column:4},end:{line:236,column:7}},"108":{start:{line:225,column:19},end:{line:228,column:8}},"109":{start:{line:230,column:6},end:{line:235,column:9}},"110":{start:{line:232,column:8},end:{line:232,column:41}},"111":{start:{line:233,column:8},end:{line:233,column:92}},"112":{start:{line:234,column:8},end:{line:234,column:15}},"113":{start:{line:242,column:2},end:{line:271,column:5}},"114":{start:{line:243,column:4},end:{line:256,column:7}},"115":{start:{line:244,column:21},end:{line:244,column:47}},"116":{start:{line:245,column:19},end:{line:248,column:7}},"117":{start:{line:250,column:6},end:{line:255,column:9}},"118":{start:{line:251,column:8},end:{line:251,column:41}},"119":{start:{line:252,column:8},end:{line:252,column:44}},"120":{start:{line:253,column:8},end:{line:253,column:88}},"121":{start:{line:254,column:8},end:{line:254,column:15}},"122":{start:{line:257,column:4},end:{line:270,column:7}},"123":{start:{line:258,column:21},end:{line:258,column:47}},"124":{start:{line:259,column:19},end:{line:262,column:7}},"125":{start:{line:264,column:6},end:{line:269,column:9}},"126":{start:{line:265,column:8},end:{line:265,column:41}},"127":{start:{line:266,column:8},end:{line:266,column:44}},"128":{start:{line:267,column:8},end:{line:267,column:91}},"129":{start:{line:268,column:8},end:{line:268,column:15}},"130":{start:{line:276,column:2},end:{line:294,column:5}},"131":{start:{line:277,column:4},end:{line:284,column:7}},"132":{start:{line:278,column:21},end:{line:278,column:47}},"133":{start:{line:280,column:6},end:{line:283,column:9}},"134":{start:{line:281,column:8},end:{line:281,column:41}},"135":{start:{line:282,column:8},end:{line:282,column:15}},"136":{start:{line:285,column:4},end:{line:293,column:7}},"137":{start:{line:286,column:21},end:{line:286,column:47}},"138":{start:{line:288,column:6},end:{line:292,column:9}},"139":{start:{line:289,column:8},end:{line:289,column:41}},"140":{start:{line:290,column:8},end:{line:290,column:79}},"141":{start:{line:291,column:8},end:{line:291,column:15}},"142":{start:{line:299,column:2},end:{line:313,column:5}},"143":{start:{line:300,column:4},end:{line:306,column:7}},"144":{start:{line:301,column:6},end:{line:305,column:9}},"145":{start:{line:302,column:8},end:{line:302,column:41}},"146":{start:{line:303,column:8},end:{line:303,column:74}},"147":{start:{line:304,column:8},end:{line:304,column:15}},"148":{start:{line:307,column:4},end:{line:312,column:7}},"149":{start:{line:308,column:6},end:{line:311,column:9}},"150":{start:{line:309,column:8},end:{line:309,column:41}},"151":{start:{line:310,column:8},end:{line:310,column:15}},"152":{start:{line:318,column:2},end:{line:345,column:5}},"153":{start:{line:319,column:4},end:{line:331,column:7}},"154":{start:{line:320,column:22},end:{line:324,column:7}},"155":{start:{line:326,column:6},end:{line:330,column:9}},"156":{start:{line:327,column:8},end:{line:327,column:41}},"157":{start:{line:328,column:8},end:{line:328,column:82}},"158":{start:{line:329,column:8},end:{line:329,column:15}},"159":{start:{line:332,column:4},end:{line:344,column:7}},"160":{start:{line:333,column:22},end:{line:337,column:7}},"161":{start:{line:339,column:6},end:{line:343,column:9}},"162":{start:{line:340,column:8},end:{line:340,column:41}},"163":{start:{line:341,column:8},end:{line:341,column:88}},"164":{start:{line:342,column:8},end:{line:342,column:15}},"165":{start:{line:350,column:2},end:{line:408,column:5}},"166":{start:{line:351,column:4},end:{line:361,column:7}},"167":{start:{line:352,column:21},end:{line:352,column:47}},"168":{start:{line:354,column:6},end:{line:360,column:9}},"169":{start:{line:357,column:8},end:{line:357,column:41}},"170":{start:{line:358,column:8},end:{line:358,column:46}},"171":{start:{line:359,column:8},end:{line:359,column:15}},"172":{start:{line:362,column:4},end:{line:372,column:7}},"173":{start:{line:363,column:21},end:{line:363,column:47}},"174":{start:{line:365,column:6},end:{line:371,column:9}},"175":{start:{line:368,column:8},end:{line:368,column:41}},"176":{start:{line:369,column:8},end:{line:369,column:76}},"177":{start:{line:370,column:8},end:{line:370,column:15}},"178":{start:{line:373,column:4},end:{line:383,column:7}},"179":{start:{line:374,column:21},end:{line:374,column:47}},"180":{start:{line:376,column:6},end:{line:382,column:9}},"181":{start:{line:379,column:8},end:{line:379,column:41}},"182":{start:{line:380,column:8},end:{line:380,column:94}},"183":{start:{line:381,column:8},end:{line:381,column:15}},"184":{start:{line:384,column:4},end:{line:395,column:7}},"185":{start:{line:385,column:24},end:{line:385,column:50}},"186":{start:{line:387,column:6},end:{line:394,column:9}},"187":{start:{line:390,column:8},end:{line:390,column:41}},"188":{start:{line:391,column:8},end:{line:391,column:44}},"189":{start:{line:392,column:8},end:{line:392,column:54}},"190":{start:{line:393,column:8},end:{line:393,column:15}},"191":{start:{line:396,column:4},end:{line:407,column:7}},"192":{start:{line:397,column:24},end:{line:397,column:50}},"193":{start:{line:399,column:6},end:{line:406,column:9}},"194":{start:{line:402,column:8},end:{line:402,column:41}},"195":{start:{line:403,column:8},end:{line:403,column:44}},"196":{start:{line:404,column:8},end:{line:404,column:84}},"197":{start:{line:405,column:8},end:{line:405,column:15}},"198":{start:{line:413,column:2},end:{line:442,column:5}},"199":{start:{line:414,column:4},end:{line:427,column:7}},"200":{start:{line:415,column:21},end:{line:415,column:47}},"201":{start:{line:416,column:25},end:{line:419,column:7}},"202":{start:{line:421,column:6},end:{line:426,column:9}},"203":{start:{line:422,column:8},end:{line:422,column:41}},"204":{start:{line:423,column:8},end:{line:423,column:44}},"205":{start:{line:424,column:8},end:{line:424,column:54}},"206":{start:{line:425,column:8},end:{line:425,column:15}},"207":{start:{line:428,column:4},end:{line:441,column:7}},"208":{start:{line:429,column:21},end:{line:429,column:47}},"209":{start:{line:430,column:25},end:{line:433,column:7}},"210":{start:{line:435,column:6},end:{line:440,column:9}},"211":{start:{line:436,column:8},end:{line:436,column:41}},"212":{start:{line:437,column:8},end:{line:437,column:44}},"213":{start:{line:438,column:8},end:{line:438,column:80}},"214":{start:{line:439,column:8},end:{line:439,column:15}},"215":{start:{line:447,column:2},end:{line:465,column:5}},"216":{start:{line:448,column:4},end:{line:455,column:7}},"217":{start:{line:449,column:24},end:{line:449,column:50}},"218":{start:{line:451,column:6},end:{line:454,column:9}},"219":{start:{line:452,column:8},end:{line:452,column:41}},"220":{start:{line:453,column:8},end:{line:453,column:15}},"221":{start:{line:456,column:4},end:{line:464,column:7}},"222":{start:{line:457,column:24},end:{line:457,column:50}},"223":{start:{line:459,column:6},end:{line:463,column:9}},"224":{start:{line:460,column:8},end:{line:460,column:41}},"225":{start:{line:461,column:8},end:{line:461,column:83}},"226":{start:{line:462,column:8},end:{line:462,column:15}},"227":{start:{line:470,column:2},end:{line:483,column:5}},"228":{start:{line:471,column:4},end:{line:482,column:7}},"229":{start:{line:472,column:19},end:{line:475,column:7}},"230":{start:{line:477,column:6},end:{line:481,column:9}},"231":{start:{line:478,column:8},end:{line:478,column:41}},"232":{start:{line:479,column:8},end:{line:479,column:44}},"233":{start:{line:480,column:8},end:{line:480,column:73}}},fnMap:{"0":{name:"_interopRequireDefault",decl:{start:{line:17,column:9},end:{line:17,column:31}},loc:{start:{line:17,column:37},end:{line:17,column:95}},line:17},"1":{name:"(anonymous_1)",decl:{start:{line:28,column:30},end:{line:28,column:31}},loc:{start:{line:28,column:36},end:{line:484,column:1}},line:28},"2":{name:"(anonymous_2)",decl:{start:{line:29,column:9},end:{line:29,column:10}},loc:{start:{line:29,column:25},end:{line:42,column:3}},line:29},"3":{name:"(anonymous_3)",decl:{start:{line:36,column:12},end:{line:36,column:13}},loc:{start:{line:36,column:27},end:{line:39,column:5}},line:36},"4":{name:"(anonymous_4)",decl:{start:{line:39,column:13},end:{line:39,column:14}},loc:{start:{line:39,column:22},end:{line:41,column:5}},line:39},"5":{name:"(anonymous_5)",decl:{start:{line:47,column:29},end:{line:47,column:30}},loc:{start:{line:47,column:35},end:{line:61,column:3}},line:47},"6":{name:"(anonymous_6)",decl:{start:{line:48,column:28},end:{line:48,column:29}},loc:{start:{line:48,column:36},end:{line:54,column:5}},line:48},"7":{name:"(anonymous_7)",decl:{start:{line:49,column:66},end:{line:49,column:67}},loc:{start:{line:49,column:85},end:{line:53,column:7}},line:49},"8":{name:"(anonymous_8)",decl:{start:{line:55,column:32},end:{line:55,column:33}},loc:{start:{line:55,column:40},end:{line:60,column:5}},line:55},"9":{name:"(anonymous_9)",decl:{start:{line:56,column:65},end:{line:56,column:66}},loc:{start:{line:56,column:89},end:{line:59,column:7}},line:56},"10":{name:"(anonymous_10)",decl:{start:{line:66,column:33},end:{line:66,column:34}},loc:{start:{line:66,column:39},end:{line:86,column:3}},line:66},"11":{name:"(anonymous_11)",decl:{start:{line:67,column:32},end:{line:67,column:33}},loc:{start:{line:67,column:40},end:{line:76,column:5}},line:67},"12":{name:"(anonymous_12)",decl:{start:{line:70,column:76},end:{line:70,column:77}},loc:{start:{line:70,column:95},end:{line:75,column:7}},line:70},"13":{name:"(anonymous_13)",decl:{start:{line:77,column:47},end:{line:77,column:48}},loc:{start:{line:77,column:55},end:{line:85,column:5}},line:77},"14":{name:"(anonymous_14)",decl:{start:{line:80,column:76},end:{line:80,column:77}},loc:{start:{line:80,column:100},end:{line:84,column:7}},line:80},"15":{name:"(anonymous_15)",decl:{start:{line:91,column:30},end:{line:91,column:31}},loc:{start:{line:91,column:36},end:{line:134,column:3}},line:91},"16":{name:"(anonymous_16)",decl:{start:{line:92,column:28},end:{line:92,column:29}},loc:{start:{line:92,column:36},end:{line:105,column:5}},line:92},"17":{name:"(anonymous_17)",decl:{start:{line:99,column:81},end:{line:99,column:82}},loc:{start:{line:99,column:100},end:{line:104,column:7}},line:99},"18":{name:"(anonymous_18)",decl:{start:{line:106,column:22},end:{line:106,column:23}},loc:{start:{line:106,column:30},end:{line:119,column:5}},line:106},"19":{name:"(anonymous_19)",decl:{start:{line:113,column:78},end:{line:113,column:79}},loc:{start:{line:113,column:97},end:{line:118,column:7}},line:113},"20":{name:"(anonymous_20)",decl:{start:{line:120,column:56},end:{line:120,column:57}},loc:{start:{line:120,column:64},end:{line:133,column:5}},line:120},"21":{name:"(anonymous_21)",decl:{start:{line:127,column:78},end:{line:127,column:79}},loc:{start:{line:127,column:97},end:{line:132,column:7}},line:127},"22":{name:"(anonymous_22)",decl:{start:{line:139,column:36},end:{line:139,column:37}},loc:{start:{line:139,column:42},end:{line:189,column:3}},line:139},"23":{name:"(anonymous_23)",decl:{start:{line:144,column:23},end:{line:144,column:24}},loc:{start:{line:144,column:31},end:{line:155,column:5}},line:144},"24":{name:"(anonymous_24)",decl:{start:{line:148,column:13},end:{line:148,column:14}},loc:{start:{line:148,column:38},end:{line:154,column:7}},line:148},"25":{name:"(anonymous_25)",decl:{start:{line:156,column:54},end:{line:156,column:55}},loc:{start:{line:156,column:62},end:{line:172,column:5}},line:156},"26":{name:"(anonymous_26)",decl:{start:{line:165,column:13},end:{line:165,column:14}},loc:{start:{line:165,column:38},end:{line:171,column:7}},line:165},"27":{name:"(anonymous_27)",decl:{start:{line:173,column:35},end:{line:173,column:36}},loc:{start:{line:173,column:43},end:{line:188,column:5}},line:173},"28":{name:"(anonymous_28)",decl:{start:{line:182,column:13},end:{line:182,column:14}},loc:{start:{line:182,column:38},end:{line:187,column:7}},line:182},"29":{name:"(anonymous_29)",decl:{start:{line:194,column:30},end:{line:194,column:31}},loc:{start:{line:194,column:36},end:{line:237,column:3}},line:194},"30":{name:"(anonymous_30)",decl:{start:{line:195,column:29},end:{line:195,column:30}},loc:{start:{line:195,column:37},end:{line:209,column:5}},line:195},"31":{name:"(anonymous_31)",decl:{start:{line:203,column:65},end:{line:203,column:66}},loc:{start:{line:203,column:92},end:{line:208,column:7}},line:203},"32":{name:"(anonymous_32)",decl:{start:{line:211,column:57},end:{line:211,column:58}},loc:{start:{line:211,column:65},end:{line:223,column:5}},line:211},"33":{name:"(anonymous_33)",decl:{start:{line:218,column:43},end:{line:218,column:44}},loc:{start:{line:218,column:70},end:{line:222,column:7}},line:218},"34":{name:"(anonymous_34)",decl:{start:{line:224,column:57},end:{line:224,column:58}},loc:{start:{line:224,column:65},end:{line:236,column:5}},line:224},"35":{name:"(anonymous_35)",decl:{start:{line:231,column:65},end:{line:231,column:66}},loc:{start:{line:231,column:92},end:{line:235,column:7}},line:231},"36":{name:"(anonymous_36)",decl:{start:{line:242,column:33},end:{line:242,column:34}},loc:{start:{line:242,column:39},end:{line:271,column:3}},line:242},"37":{name:"(anonymous_37)",decl:{start:{line:243,column:25},end:{line:243,column:26}},loc:{start:{line:243,column:33},end:{line:256,column:5}},line:243},"38":{name:"(anonymous_38)",decl:{start:{line:250,column:132},end:{line:250,column:133}},loc:{start:{line:250,column:151},end:{line:255,column:7}},line:250},"39":{name:"(anonymous_39)",decl:{start:{line:257,column:63},end:{line:257,column:64}},loc:{start:{line:257,column:71},end:{line:270,column:5}},line:257},"40":{name:"(anonymous_40)",decl:{start:{line:264,column:132},end:{line:264,column:133}},loc:{start:{line:264,column:151},end:{line:269,column:7}},line:264},"41":{name:"(anonymous_41)",decl:{start:{line:276,column:36},end:{line:276,column:37}},loc:{start:{line:276,column:42},end:{line:294,column:3}},line:276},"42":{name:"(anonymous_42)",decl:{start:{line:277,column:28},end:{line:277,column:29}},loc:{start:{line:277,column:36},end:{line:284,column:5}},line:277},"43":{name:"(anonymous_43)",decl:{start:{line:280,column:122},end:{line:280,column:123}},loc:{start:{line:280,column:141},end:{line:283,column:7}},line:280},"44":{name:"(anonymous_44)",decl:{start:{line:285,column:62},end:{line:285,column:63}},loc:{start:{line:285,column:70},end:{line:293,column:5}},line:285},"45":{name:"(anonymous_45)",decl:{start:{line:288,column:122},end:{line:288,column:123}},loc:{start:{line:288,column:141},end:{line:292,column:7}},line:288},"46":{name:"(anonymous_46)",decl:{start:{line:299,column:32},end:{line:299,column:33}},loc:{start:{line:299,column:38},end:{line:313,column:3}},line:299},"47":{name:"(anonymous_47)",decl:{start:{line:300,column:27},end:{line:300,column:28}},loc:{start:{line:300,column:35},end:{line:306,column:5}},line:300},"48":{name:"(anonymous_48)",decl:{start:{line:301,column:69},end:{line:301,column:70}},loc:{start:{line:301,column:88},end:{line:305,column:7}},line:301},"49":{name:"(anonymous_49)",decl:{start:{line:307,column:36},end:{line:307,column:37}},loc:{start:{line:307,column:44},end:{line:312,column:5}},line:307},"50":{name:"(anonymous_50)",decl:{start:{line:308,column:68},end:{line:308,column:69}},loc:{start:{line:308,column:87},end:{line:311,column:7}},line:308},"51":{name:"(anonymous_51)",decl:{start:{line:318,column:33},end:{line:318,column:34}},loc:{start:{line:318,column:39},end:{line:345,column:3}},line:318},"52":{name:"(anonymous_52)",decl:{start:{line:319,column:24},end:{line:319,column:25}},loc:{start:{line:319,column:32},end:{line:331,column:5}},line:319},"53":{name:"(anonymous_53)",decl:{start:{line:326,column:84},end:{line:326,column:85}},loc:{start:{line:326,column:103},end:{line:330,column:7}},line:326},"54":{name:"(anonymous_54)",decl:{start:{line:332,column:75},end:{line:332,column:76}},loc:{start:{line:332,column:83},end:{line:344,column:5}},line:332},"55":{name:"(anonymous_55)",decl:{start:{line:339,column:84},end:{line:339,column:85}},loc:{start:{line:339,column:103},end:{line:343,column:7}},line:339},"56":{name:"(anonymous_56)",decl:{start:{line:350,column:41},end:{line:350,column:42}},loc:{start:{line:350,column:47},end:{line:408,column:3}},line:350},"57":{name:"(anonymous_57)",decl:{start:{line:351,column:54},end:{line:351,column:55}},loc:{start:{line:351,column:62},end:{line:361,column:5}},line:351},"58":{name:"(anonymous_58)",decl:{start:{line:356,column:13},end:{line:356,column:14}},loc:{start:{line:356,column:32},end:{line:360,column:7}},line:356},"59":{name:"(anonymous_59)",decl:{start:{line:362,column:49},end:{line:362,column:50}},loc:{start:{line:362,column:57},end:{line:372,column:5}},line:362},"60":{name:"(anonymous_60)",decl:{start:{line:367,column:13},end:{line:367,column:14}},loc:{start:{line:367,column:32},end:{line:371,column:7}},line:367},"61":{name:"(anonymous_61)",decl:{start:{line:373,column:36},end:{line:373,column:37}},loc:{start:{line:373,column:44},end:{line:383,column:5}},line:373},"62":{name:"(anonymous_62)",decl:{start:{line:378,column:13},end:{line:378,column:14}},loc:{start:{line:378,column:32},end:{line:382,column:7}},line:378},"63":{name:"(anonymous_63)",decl:{start:{line:384,column:35},end:{line:384,column:36}},loc:{start:{line:384,column:43},end:{line:395,column:5}},line:384},"64":{name:"(anonymous_64)",decl:{start:{line:389,column:13},end:{line:389,column:14}},loc:{start:{line:389,column:32},end:{line:394,column:7}},line:389},"65":{name:"(anonymous_65)",decl:{start:{line:396,column:47},end:{line:396,column:48}},loc:{start:{line:396,column:55},end:{line:407,column:5}},line:396},"66":{name:"(anonymous_66)",decl:{start:{line:401,column:13},end:{line:401,column:14}},loc:{start:{line:401,column:32},end:{line:406,column:7}},line:401},"67":{name:"(anonymous_67)",decl:{start:{line:413,column:42},end:{line:413,column:43}},loc:{start:{line:413,column:48},end:{line:442,column:3}},line:413},"68":{name:"(anonymous_68)",decl:{start:{line:414,column:28},end:{line:414,column:29}},loc:{start:{line:414,column:36},end:{line:427,column:5}},line:414},"69":{name:"(anonymous_69)",decl:{start:{line:421,column:145},end:{line:421,column:146}},loc:{start:{line:421,column:164},end:{line:426,column:7}},line:421},"70":{name:"(anonymous_70)",decl:{start:{line:428,column:64},end:{line:428,column:65}},loc:{start:{line:428,column:72},end:{line:441,column:5}},line:428},"71":{name:"(anonymous_71)",decl:{start:{line:435,column:145},end:{line:435,column:146}},loc:{start:{line:435,column:164},end:{line:440,column:7}},line:435},"72":{name:"(anonymous_72)",decl:{start:{line:447,column:39},end:{line:447,column:40}},loc:{start:{line:447,column:45},end:{line:465,column:3}},line:447},"73":{name:"(anonymous_73)",decl:{start:{line:448,column:36},end:{line:448,column:37}},loc:{start:{line:448,column:44},end:{line:455,column:5}},line:448},"74":{name:"(anonymous_74)",decl:{start:{line:451,column:128},end:{line:451,column:129}},loc:{start:{line:451,column:147},end:{line:454,column:7}},line:451},"75":{name:"(anonymous_75)",decl:{start:{line:456,column:63},end:{line:456,column:64}},loc:{start:{line:456,column:71},end:{line:464,column:5}},line:456},"76":{name:"(anonymous_76)",decl:{start:{line:459,column:128},end:{line:459,column:129}},loc:{start:{line:459,column:147},end:{line:463,column:7}},line:459},"77":{name:"(anonymous_77)",decl:{start:{line:470,column:35},end:{line:470,column:36}},loc:{start:{line:470,column:41},end:{line:483,column:3}},line:470},"78":{name:"(anonymous_78)",decl:{start:{line:471,column:31},end:{line:471,column:32}},loc:{start:{line:471,column:39},end:{line:482,column:5}},line:471},"79":{name:"(anonymous_79)",decl:{start:{line:477,column:125},end:{line:477,column:126}},loc:{start:{line:477,column:144},end:{line:481,column:7}},line:477}},branchMap:{"0":{loc:{start:{line:17,column:46},end:{line:17,column:92}},type:"cond-expr",locations:[{start:{line:17,column:70},end:{line:17,column:73}},{start:{line:17,column:76},end:{line:17,column:92}}],line:17},"1":{loc:{start:{line:17,column:46},end:{line:17,column:67}},type:"binary-expr",locations:[{start:{line:17,column:46},end:{line:17,column:49}},{start:{line:17,column:53},end:{line:17,column:67}}],line:17},"2":{loc:{start:{line:149,column:8},end:{line:149,column:34}},type:"if",locations:[{start:{line:149,column:8},end:{line:149,column:34}},{start:{line:149,column:8},end:{line:149,column:34}}],line:149},"3":{loc:{start:{line:166,column:8},end:{line:166,column:34}},type:"if",locations:[{start:{line:166,column:8},end:{line:166,column:34}},{start:{line:166,column:8},end:{line:166,column:34}}],line:166},"4":{loc:{start:{line:183,column:8},end:{line:183,column:34}},type:"if",locations:[{start:{line:183,column:8},end:{line:183,column:34}},{start:{line:183,column:8},end:{line:183,column:34}}],line:183}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":0,"150":0,"151":0,"152":0,"153":0,"154":0,"155":0,"156":0,"157":0,"158":0,"159":0,"160":0,"161":0,"162":0,"163":0,"164":0,"165":0,"166":0,"167":0,"168":0,"169":0,"170":0,"171":0,"172":0,"173":0,"174":0,"175":0,"176":0,"177":0,"178":0,"179":0,"180":0,"181":0,"182":0,"183":0,"184":0,"185":0,"186":0,"187":0,"188":0,"189":0,"190":0,"191":0,"192":0,"193":0,"194":0,"195":0,"196":0,"197":0,"198":0,"199":0,"200":0,"201":0,"202":0,"203":0,"204":0,"205":0,"206":0,"207":0,"208":0,"209":0,"210":0,"211":0,"212":0,"213":0,"214":0,"215":0,"216":0,"217":0,"218":0,"219":0,"220":0,"221":0,"222":0,"223":0,"224":0,"225":0,"226":0,"227":0,"228":0,"229":0,"230":0,"231":0,"232":0,"233":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0},b:{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0]},inputSourceMap:{version:3,sources:["blog_test.js"],names:["require","config","user","autToken","chai","should","use","chaiHttp","describe","before","done","dbURI","process","env","DB_USER","DB_PASSWORD","mongoose","connect","useNewUrlParser","useUnifiedTopology","then","responseult","console","log","catch","error","it","request","server","get","end","err","response","have","status","body","message","be","eq","responseponse","postId","a","newUser","User","username","email","password","post","send","property","eql","logInUser","Token","userToken","Post","title","content","set","patch","delete","sender","name","commentId","newComment","description","like","userId","put"],mappings:"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",sourceRoot:"/home/nyakamwe/Desktop/my-brand-nyakamwe/server/src/test/",sourcesContent:["import mongoose from 'mongoose';\nimport chai from 'chai';\nimport server from \"../index\";\nimport chaiHttp from \"chai-http\";\nimport {Post} from \"../models/Post\";\nrequire(\"dotenv\").config();\n\n\n//to mock a function during testing\nimport sinon from 'sinon'\nimport { User } from '../models/User';\n\nlet user, autToken;\n\n//assertion style\nchai.should();\n\nchai.use(chaiHttp)\n\ndescribe(\"Test CRUD of Blog\", ()=>{\n    before(function(done) {\n        // Connect to MongoDB database\n    const dbURI =`mongodb+srv://${process.env.DB_USER}:${process.env.DB_PASSWORD}@node-applications.fe4au.mongodb.net/node-tutorial?retryWrites=true&w=majority`\n    mongoose.connect(dbURI,{useNewUrlParser:true, useUnifiedTopology:true}).then((responseult)=>{\n\n            console.log('Db Connected!')\n\n            done();\n            \n        }).catch((error)=>{\n            console.log(error)\n        })\n\n    });\n\n    \n\n\n    \n   \n    /**\n     * test GET posts route\n     */\n\n    describe(\"GET /api/posts\", ()=>{\n        \n        it(\"returns all posts\", (done)=>{\n            chai.request(server)\n            .get(\"/api/posts\")\n            .end((err, response)=>{\n                response.should.have.status(200);\n                response.body.message.should.be.eq(\"Fetched successfully\")\n            done();\n            })\n            \n        })\n\n        it(\"not returns all posts\", (done)=>{\n            chai.request(server)\n            .get(\"/api/post\")\n            .end((err, responseponse)=>{\n                responseponse.should.have.status(404);\n\n            done();\n            })\n            \n        })\n\n        \n    });\n\n    /**\n     * test GET(by id) post route\n     */\n\n    describe(\"GET /api/posts/:id\", ()=>{\n        \n        it(\"returns a single post\", (done)=>{\n            const postId = \"625943e64e9dd47477f9be96\"\n            chai.request(server)\n            .get(`/api/posts/${postId}`)\n            .end((err, response)=>{\n                response.should.have.status(200);\n                response.body.should.be.a('object');\n                response.body.message.should.be.eq(\"successfully fetched\")\n                \n            done();\n            })\n            \n        });\n\n        \n        it(\"not returns a single post at this id\", (done)=>{\n            const postId = \"625943e64e9dd47y77f9be96\"\n            chai.request(server)\n            .get(`/api/posts/${postId}`)\n            .end((err, responseponse)=>{\n                responseponse.should.have.status(404);\n                responseponse.body.error.should.be.eq(\"Post does not exist!\")\n                \n            done();\n            })\n            \n        })\n    })\n\n\n    /**\n     * Test create new user\n     */\n\n    describe('POST /api/users', ()=>{\n\n        it('creates new user ', (done)=>{\n\n            const newUser = new User({\n                username:\"menase\",\n                email:\"menase@mail.com\",\n                password:\"password test\"\n           \n            })\n\n            chai.request(server)\n            .post(\"/api/users\")\n            .send(newUser)\n            .end((err, response)=>{\n                response.should.have.status(201);\n                response.body.should.be.a('object');\n                response.body.should.have.property('message').eql(\"user created!\");\n            done();   \n            })\n        })\n\n\n        it('User exists', (done)=>{\n\n            user = new User({\n                username:\"myuser\",\n                email:\"myuser@mail.com\",\n                password:\"password test\"\n           \n            })\n\n            chai.request(server)\n            .post(\"/api/users\")\n            .send(user)\n            .end((err, response)=>{\n                response.should.have.status(403);\n                response.body.should.be.a('object');\n                response.body.should.have.property('message').eql(\"user already exists\");\n            done();   \n            })\n\n        })\n\n        it('new user with no username, email or password ', (done)=>{\n\n            const user = new User({\n                username:\"\",\n                email:\"\",\n                password:\"\"\n           \n            })\n\n            chai.request(server)\n            .post(\"/api/users\")\n            .send(user)\n            .end((err, response)=>{\n                response.should.have.status(403);\n                response.body.should.be.a('object');\n                response.body.should.have.property('message').eql(\"All fields are required\");\n            done();   \n            })\n        })\n\n    })\n\n    /**\n     * POST User login\n     */\n\n    describe('POST /api/users/login', ()=>{\n       \n        const logInUser = {\n            username:'keza',\n            password:'kayi'\n        }\n\n        it('login a user', (done)=>{\n            chai.request(server)\n            .post('/api/users/login')\n            .send({username:logInUser.username, password:logInUser.password})\n            .end(function(err, response) {\n                if (err) return done(err);\n\n                response.should.have.status(200);\n                response.body.should.be.a('object');\n                autToken = response.body.Token\n                \n                done();\n            });\n\n        })\n\n        it('not login a user with incorrect credentials', (done)=>{\n            const logInUser = {\n                username:'keza',\n                password:'password'\n            }\n            chai.request(server)\n            .post('/api/users/login')\n            .send({username:logInUser.username, password:logInUser.password})\n            .end(function(err, response) {\n                if (err) return done(err);\n\n                response.should.have.status(403);\n                response.body.should.be.a('object');\n                response.body.should.have.property('message').eql(\"Invalid username or password.\");\n            done();   \n            });\n\n        })\n\n        it('not login anonymous user', (done)=>{\n            const logInUser = {\n                username:'hereweare',\n                password:'hereweare'\n            }\n            chai.request(server)\n            .post('/api/users/login')\n            .send({username:logInUser.username, password:logInUser.password})\n            .end(function(err, response) {\n                if (err) return done(err);\n\n                response.should.have.status(400);\n                response.body.should.have.property('message').eql(\"Not User.\");\n            done();   \n            });\n\n        })\n\n\n       \n    })\n\n    /**\n     * POST a post route\n     */\n\n    describe(\"POST /api/posts\", ()=>{\n\n        it(\"creates a new post\", (done)=>{\n            const userToken = 'Bearer ' + autToken\n\n            const post = new Post({\n                title: \"unit testing\",\n                content: \"I am testing nodejs api using mocha with chai assertion library\"\n                \n            })\n            // post.save()\n            \n            chai.request(server)\n            .post(\"/api/posts\")\n        \n            //set the auth header with our token\n            .set('Authorization', 'Bearer ' + autToken)\n            .send(post)\n            .end(function(error, response) {\n                response.should.have.status(201);\n                response.body.should.be.a('object');\n                response.body.should.have.property('message').eql(\"Post Saved successfully\");\n            done();  \n            });\n        })\n            \n\n        const userToken = 'Bearer ' + autToken\n\n        it(\"fails to create a post due to unathorized user\", (done)=>{\n\n            const post = new Post({\n                title: \"keza testing \",\n                content: \"unit testing with mocha and user keza\"\n                \n            })\n            // post.save()\n            \n            chai.request(server)\n            .post(\"/api/posts\")\n            .send(post)\n            //set the auth header with our token\n            .set('Authorization', userToken)\n            .end(function(error, response) {\n                response.should.have.status(403);\n                response.body.should.have.property('message').eql(\"Invalid token\");\n            done();  \n            });\n           \n            \n        }) \n\n        it(\"do not create a post without title and content\", (done)=>{\n\n            const post = new Post({\n                title: \"\",\n                content: \"\"\n                \n            })\n            // post.save()\n            \n            chai.request(server)\n            .post(\"/api/posts\")\n        \n            //set the auth header with our token\n            .set('Authorization', 'Bearer ' + autToken)\n            .send(post)\n            .end(function(error, response) {\n                response.should.have.status(400);\n                response.body.should.have.property('message').eql(\"Title and content are required\")\n            done();  \n            });\n        })\n\n            \n    }) \n    \n    \n    /**\n     * PUT a post route\n     */\n\n    describe('PUT /api/posts/:id', ()=>{\n        it('updates a post', (done)=>{\n            const postId = \"625971e678ffabd74eeb9f9c\"\n            const post = {\n                title: \"unit testing\",\n                content: \"mocha Js framework for testing\",\n                \n            }\n            chai.request(server)\n            .patch(`/api/posts/${postId}`)\n            .send(post)\n            .set('Authorization', 'Bearer ' + autToken)\n            .end((err, response)=>{\n                response.should.have.status(200);\n                response.body.should.be.a('object');\n                response.body.should.have.property('message').eql(\"Post successfully updated!\")\n                \n            done();\n            })\n        })\n\n        it('don\\'t updates a post when title or content is empty', (done)=>{\n            const postId = \"625af4e9872ff42d49f47dcd\"\n            const post = {\n                title: \"avicii\",\n                content: \"\",\n                \n            }\n            chai.request(server)\n            .patch(`/api/posts/${postId}`)\n            .send(post)\n            .set('Authorization', 'Bearer ' + autToken)\n            .end((err, response)=>{\n                response.should.have.status(400);\n                response.body.should.be.a('object');\n                response.body.should.have.property('message').eql(\"Title and content need value!\")\n                \n            done();\n            })\n        })\n\n\n    })\n\n    /**\n     * DELETE post route\n     */\n\n     describe('DELETE /api/posts/:id', ()=>{\n        it('It deletes a post', (done)=>{\n            const postId = \"62597f8412f8da13b4e0a385\"\n            chai.request(server)\n            .delete(`/api/posts/${postId}`)\n            .set('Authorization', 'Bearer ' + autToken)\n            .end((err, response)=>{\n                response.should.have.status(200);\n\n            done();\n            })\n        })\n\n        it('It should not delete post that doesn\\'t exist in DB', (done)=>{\n            const postId = \"625b07c93cc2f2b0163f1a75\"\n            chai.request(server)\n            .delete(`/api/posts/${postId}`)\n            .set('Authorization', 'Bearer ' + autToken)\n            .end((err, response)=>{\n                response.should.have.status(404);\n                response.body.should.have.property('error').eql(\"Post doesn't exist!\")\n            done();\n            })\n        })\n\n        \n\n    })\n\n    /**\n     * GET Contact route\n     */\n\n    describe('GET /api/messages', ()=>{\n        it('get all messages', (done)=>{\n            chai.request(server)\n            .get(\"/api/messages\")\n            .end((err, response)=>{\n                response.should.have.status(200);\n                response.body.should.property('message').eql(\"contacts fetched!\")\n            done();\n            })\n        })\n\n        it('don\\'t return any message', (done)=>{\n            chai.request(server)\n            .get(\"/api/message\")\n            .end((err, response)=>{\n                response.should.have.status(404);\n            done();\n            })\n        })\n    })\n\n    /**\n     * POST Contact route\n     */\n\n    describe('POST /api/messages', ()=>{\n        it('Send messages', (done)=>{\n            const message = {\n                sender: 'test@mail.com',\n                name:\"Eric gasana\",\n                message: \"I would like to thank you for those valuable posts\",\n        \n            }\n            chai.request(server)\n            .post(\"/api/messages\")\n            .send(message)\n            .end((err, response)=>{\n                response.should.have.status(201);\n                response.body.should.property('message').eql(\"Message Sent successfully\")\n            done();\n            })\n        })\n\n        it('dont send a message when sender, message content is not provided', (done)=>{\n            const message = {\n                sender: '',\n                name:\"sawa\",\n                message: \"\",\n        \n            }\n            chai.request(server)\n            .post(\"/api/messages\")\n            .send(message)\n            .end((err, response)=>{\n                response.should.have.status(403);\n                response.body.should.property('message').eql(\"sender and message are required\")\n            done();\n            })\n        \n        })\n    })\n\n    /**\n     * GET comment route\n    */\n\n    describe('GET /api/posts/:id/comment', ()=>{\n        it('shows all comments related to specific post', (done)=>{\n            const postId = \"625943e64e9dd47477f9be96\"\n            chai.request(server)\n            .get(`/api/posts/${postId}/comment`)\n            .send({postId})\n            .end((err, response)=>{\n                response.should.have.status(200);\n                response.body.should.have.a('object')\n            done();\n            })\n        })\n        it('show error when that post in not in DB', (done)=>{\n            const postId = \"625b07c93cc2f2b0163f1a75\"\n            chai.request(server)\n            .get(`/api/posts/${postId}/comment`)\n            .send({postId})\n            .end((err, response)=>{\n                response.should.have.status(404);\n                response.body.should.have.property('message').eql(\"post not found\")\n            done();\n            })\n        })\n\n        it('when post have no comment', (done)=>{\n            const postId = \"62597f9e70efe2a55030c5ab\"\n            chai.request(server)\n            .get(`/api/posts/${postId}/comment`)\n            .send({postId})\n            .end((err, response)=>{\n                response.should.have.status(404);\n                response.body.should.have.property('comment').eql(\"no comments related to this post\")\n            done();\n            })\n        })\n\n        \n        it('shows individual comment', (done)=>{\n            const commentId = \"6257f76d68ee5f8c8f964d0b\"\n            chai.request(server)\n            .get(`/api/comments/${commentId}`)\n            .send({commentId})\n            .end((err, response)=>{\n                response.should.have.status(200);\n                response.body.should.be.a('object')\n                response.body.should.have.property('comment')\n            done();\n            })\n        })\n\n        it('shows error for non existing comment', (done)=>{\n            const commentId = \"625943e64e9dd47477f9be96\"\n            chai.request(server)\n            .get(`/api/comments/${commentId}`)\n            .send({commentId})\n            .end((err, response)=>{\n                response.should.have.status(404);\n                response.body.should.be.a('object')\n                response.body.should.have.property('comment').eql(\"Comment Doesn't Exists\")\n            done();\n            })\n        })\n\n        \n        \n    })\n\n\n    /**\n    * POST comment route\n    */\n\n    describe('POST /api/posts/:id/comment', ()=>{\n        it('comment on a post', (done)=>{\n            const postId = \"625943e64e9dd47477f9be96\"\n            const newComment ={\n                postId,\n                description:\"testing a comment\"\n            };\n\n            chai.request(server)\n            .post(`/api/posts/${postId}/comment`)\n            .send(newComment)\n            .set('Authorization', 'Bearer ' + autToken )\n            .end((err, response)=>{\n                response.should.have.status(201);\n                response.body.should.be.a('object');\n                response.body.should.have.property('comment')\n            done();\n            })\n        })\n\n\n        it('handles when you want to comment on non existing post', (done)=>{\n            const postId = \"62597f8412f8da13b4e0a385\"\n            const newComment ={\n                postId,\n                description:\"testing a comment\"\n            };\n            chai.request(server)\n            .post(`/api/posts/${postId}/comment`)\n            .send(newComment)\n            .set('Authorization', 'Bearer ' + autToken )\n            .end((err, response)=>{\n                response.should.have.status(404);\n                response.body.should.be.a('object');\n                response.body.should.have.property('message').eql(\"Post not available\");\n            done();\n            })\n        })\n\n    })\n\n\n    /**\n     * DELETE comment route\n     */\n\n    describe('DELETE /api/comments/:id', ()=>{\n        it('deletes comment on a post', (done)=>{\n            const commentId = \"6257c120c9ebb837fc381ac8\"\n            chai.request(server)\n            .delete(`/api/comments/${commentId}`)\n            .set('Authorization', 'Bearer ' + autToken )\n            .end((err, response)=>{\n                response.should.have.status(200);\n                \n            done();\n            })\n        })\n\n        it('handles when you want to delete non existing comment', (done)=>{\n            const commentId = \"625943e64e9dd47477f9be96\"\n            chai.request(server)\n            .delete(`/api/comments/${commentId}`)\n            .set('Authorization', 'Bearer ' + autToken )\n            .end((err, response)=>{\n                response.should.have.status(404);\n                response.body.should.have.property('message').eql(\"Comment doesn't exist\")\n            done();\n            })\n        })\n\n    })\n\n    /**\n     * POST like route\n     */\n\n     describe('POST /api/posts/like', ()=>{\n        it('likes a post on blog', (done)=>{\n            const like={\n                postId:\"625c7165aec6ae2c5160b919\",\n                userId:\"625783e613e48cec4a6e5901\"\n            }\n            chai.request(server)\n            .put('/api/posts/like')\n            .send(like)\n            .set('Authorization', 'Bearer ' + autToken)\n            .end((err, response)=>{\n                response.should.have.status(200);\n                response.body.should.be.a('object');\n                response.body.should.have.property('message').eql(\"post liked!\")\n            })\n        })\n    })\n\n\n})\n\n\n"]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"8249671863b49b0c29ccfd6059ef97724f61da7b"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_23ucov19zy=function(){return actualCoverage;};}return actualCoverage;}cov_23ucov19zy();var _mongoose=(cov_23ucov19zy().s[0]++,_interopRequireDefault(require("mongoose")));var _chai=(cov_23ucov19zy().s[1]++,_interopRequireDefault(require("chai")));var _index=(cov_23ucov19zy().s[2]++,_interopRequireDefault(require("../index")));var _chaiHttp=(cov_23ucov19zy().s[3]++,_interopRequireDefault(require("chai-http")));var _Post=(cov_23ucov19zy().s[4]++,require("../models/Post"));var _sinon=(cov_23ucov19zy().s[5]++,_interopRequireDefault(require("sinon")));var _User=(cov_23ucov19zy().s[6]++,require("../models/User"));function _interopRequireDefault(obj){cov_23ucov19zy().f[0]++;cov_23ucov19zy().s[7]++;return(cov_23ucov19zy().b[1][0]++,obj)&&(cov_23ucov19zy().b[1][1]++,obj.__esModule)?(cov_23ucov19zy().b[0][0]++,obj):(cov_23ucov19zy().b[0][1]++,{default:obj});}cov_23ucov19zy().s[8]++;require("dotenv").config();//to mock a function during testing
let user,autToken;//assertion style
cov_23ucov19zy().s[9]++;_chai.default.should();cov_23ucov19zy().s[10]++;_chai.default.use(_chaiHttp.default);cov_23ucov19zy().s[11]++;describe("Test CRUD of Blog",()=>{cov_23ucov19zy().f[1]++;cov_23ucov19zy().s[12]++;before(function(done){cov_23ucov19zy().f[2]++;// Connect to MongoDB database
const dbURI=(cov_23ucov19zy().s[13]++,`mongodb+srv://${process.env.DB_USER}:${process.env.DB_PASSWORD}@node-applications.fe4au.mongodb.net/node-tutorial?retryWrites=true&w=majority`);cov_23ucov19zy().s[14]++;_mongoose.default.connect(dbURI,{useNewUrlParser:true,useUnifiedTopology:true}).then(responseult=>{cov_23ucov19zy().f[3]++;cov_23ucov19zy().s[15]++;console.log('Db Connected!');cov_23ucov19zy().s[16]++;done();}).catch(error=>{cov_23ucov19zy().f[4]++;cov_23ucov19zy().s[17]++;console.log(error);});});/**
   * test GET posts route
   */cov_23ucov19zy().s[18]++;describe("GET /api/posts",()=>{cov_23ucov19zy().f[5]++;cov_23ucov19zy().s[19]++;it("returns all posts",done=>{cov_23ucov19zy().f[6]++;cov_23ucov19zy().s[20]++;_chai.default.request(_index.default).get("/api/posts").end((err,response)=>{cov_23ucov19zy().f[7]++;cov_23ucov19zy().s[21]++;response.should.have.status(200);cov_23ucov19zy().s[22]++;response.body.message.should.be.eq("Fetched successfully");cov_23ucov19zy().s[23]++;done();});});cov_23ucov19zy().s[24]++;it("not returns all posts",done=>{cov_23ucov19zy().f[8]++;cov_23ucov19zy().s[25]++;_chai.default.request(_index.default).get("/api/post").end((err,responseponse)=>{cov_23ucov19zy().f[9]++;cov_23ucov19zy().s[26]++;responseponse.should.have.status(404);cov_23ucov19zy().s[27]++;done();});});});/**
   * test GET(by id) post route
   */cov_23ucov19zy().s[28]++;describe("GET /api/posts/:id",()=>{cov_23ucov19zy().f[10]++;cov_23ucov19zy().s[29]++;it("returns a single post",done=>{cov_23ucov19zy().f[11]++;const postId=(cov_23ucov19zy().s[30]++,"625943e64e9dd47477f9be96");cov_23ucov19zy().s[31]++;_chai.default.request(_index.default).get(`/api/posts/${postId}`).end((err,response)=>{cov_23ucov19zy().f[12]++;cov_23ucov19zy().s[32]++;response.should.have.status(200);cov_23ucov19zy().s[33]++;response.body.should.be.a('object');cov_23ucov19zy().s[34]++;response.body.message.should.be.eq("successfully fetched");cov_23ucov19zy().s[35]++;done();});});cov_23ucov19zy().s[36]++;it("not returns a single post at this id",done=>{cov_23ucov19zy().f[13]++;const postId=(cov_23ucov19zy().s[37]++,"625943e64e9dd47y77f9be96");cov_23ucov19zy().s[38]++;_chai.default.request(_index.default).get(`/api/posts/${postId}`).end((err,responseponse)=>{cov_23ucov19zy().f[14]++;cov_23ucov19zy().s[39]++;responseponse.should.have.status(404);cov_23ucov19zy().s[40]++;responseponse.body.error.should.be.eq("Post does not exist!");cov_23ucov19zy().s[41]++;done();});});});/**
   * Test create new user
   */cov_23ucov19zy().s[42]++;describe('POST /api/users',()=>{cov_23ucov19zy().f[15]++;cov_23ucov19zy().s[43]++;it('creates new user ',done=>{cov_23ucov19zy().f[16]++;const newUser=(cov_23ucov19zy().s[44]++,new _User.User({username:"menase",email:"menase@mail.com",password:"password test"}));cov_23ucov19zy().s[45]++;_chai.default.request(_index.default).post("/api/users").send(newUser).end((err,response)=>{cov_23ucov19zy().f[17]++;cov_23ucov19zy().s[46]++;response.should.have.status(201);cov_23ucov19zy().s[47]++;response.body.should.be.a('object');cov_23ucov19zy().s[48]++;response.body.should.have.property('message').eql("user created!");cov_23ucov19zy().s[49]++;done();});});cov_23ucov19zy().s[50]++;it('User exists',done=>{cov_23ucov19zy().f[18]++;cov_23ucov19zy().s[51]++;user=new _User.User({username:"myuser",email:"myuser@mail.com",password:"password test"});cov_23ucov19zy().s[52]++;_chai.default.request(_index.default).post("/api/users").send(user).end((err,response)=>{cov_23ucov19zy().f[19]++;cov_23ucov19zy().s[53]++;response.should.have.status(403);cov_23ucov19zy().s[54]++;response.body.should.be.a('object');cov_23ucov19zy().s[55]++;response.body.should.have.property('message').eql("user already exists");cov_23ucov19zy().s[56]++;done();});});cov_23ucov19zy().s[57]++;it('new user with no username, email or password ',done=>{cov_23ucov19zy().f[20]++;const user=(cov_23ucov19zy().s[58]++,new _User.User({username:"",email:"",password:""}));cov_23ucov19zy().s[59]++;_chai.default.request(_index.default).post("/api/users").send(user).end((err,response)=>{cov_23ucov19zy().f[21]++;cov_23ucov19zy().s[60]++;response.should.have.status(403);cov_23ucov19zy().s[61]++;response.body.should.be.a('object');cov_23ucov19zy().s[62]++;response.body.should.have.property('message').eql("All fields are required");cov_23ucov19zy().s[63]++;done();});});});/**
   * POST User login
   */cov_23ucov19zy().s[64]++;describe('POST /api/users/login',()=>{cov_23ucov19zy().f[22]++;const logInUser=(cov_23ucov19zy().s[65]++,{username:'keza',password:'kayi'});cov_23ucov19zy().s[66]++;it('login a user',done=>{cov_23ucov19zy().f[23]++;cov_23ucov19zy().s[67]++;_chai.default.request(_index.default).post('/api/users/login').send({username:logInUser.username,password:logInUser.password}).end(function(err,response){cov_23ucov19zy().f[24]++;cov_23ucov19zy().s[68]++;if(err){cov_23ucov19zy().b[2][0]++;cov_23ucov19zy().s[69]++;return done(err);}else{cov_23ucov19zy().b[2][1]++;}cov_23ucov19zy().s[70]++;response.should.have.status(200);cov_23ucov19zy().s[71]++;response.body.should.be.a('object');cov_23ucov19zy().s[72]++;autToken=response.body.Token;cov_23ucov19zy().s[73]++;done();});});cov_23ucov19zy().s[74]++;it('not login a user with incorrect credentials',done=>{cov_23ucov19zy().f[25]++;const logInUser=(cov_23ucov19zy().s[75]++,{username:'keza',password:'password'});cov_23ucov19zy().s[76]++;_chai.default.request(_index.default).post('/api/users/login').send({username:logInUser.username,password:logInUser.password}).end(function(err,response){cov_23ucov19zy().f[26]++;cov_23ucov19zy().s[77]++;if(err){cov_23ucov19zy().b[3][0]++;cov_23ucov19zy().s[78]++;return done(err);}else{cov_23ucov19zy().b[3][1]++;}cov_23ucov19zy().s[79]++;response.should.have.status(403);cov_23ucov19zy().s[80]++;response.body.should.be.a('object');cov_23ucov19zy().s[81]++;response.body.should.have.property('message').eql("Invalid username or password.");cov_23ucov19zy().s[82]++;done();});});cov_23ucov19zy().s[83]++;it('not login anonymous user',done=>{cov_23ucov19zy().f[27]++;const logInUser=(cov_23ucov19zy().s[84]++,{username:'hereweare',password:'hereweare'});cov_23ucov19zy().s[85]++;_chai.default.request(_index.default).post('/api/users/login').send({username:logInUser.username,password:logInUser.password}).end(function(err,response){cov_23ucov19zy().f[28]++;cov_23ucov19zy().s[86]++;if(err){cov_23ucov19zy().b[4][0]++;cov_23ucov19zy().s[87]++;return done(err);}else{cov_23ucov19zy().b[4][1]++;}cov_23ucov19zy().s[88]++;response.should.have.status(400);cov_23ucov19zy().s[89]++;response.body.should.have.property('message').eql("Not User.");cov_23ucov19zy().s[90]++;done();});});});/**
   * POST a post route
   */cov_23ucov19zy().s[91]++;describe("POST /api/posts",()=>{cov_23ucov19zy().f[29]++;cov_23ucov19zy().s[92]++;it("creates a new post",done=>{cov_23ucov19zy().f[30]++;const userToken=(cov_23ucov19zy().s[93]++,'Bearer '+autToken);const post=(cov_23ucov19zy().s[94]++,new _Post.Post({title:"unit testing",content:"I am testing nodejs api using mocha with chai assertion library"}));// post.save()
cov_23ucov19zy().s[95]++;_chai.default.request(_index.default).post("/api/posts")//set the auth header with our token
.set('Authorization','Bearer '+autToken).send(post).end(function(error,response){cov_23ucov19zy().f[31]++;cov_23ucov19zy().s[96]++;response.should.have.status(201);cov_23ucov19zy().s[97]++;response.body.should.be.a('object');cov_23ucov19zy().s[98]++;response.body.should.have.property('message').eql("Post Saved successfully");cov_23ucov19zy().s[99]++;done();});});const userToken=(cov_23ucov19zy().s[100]++,'Bearer '+autToken);cov_23ucov19zy().s[101]++;it("fails to create a post due to unathorized user",done=>{cov_23ucov19zy().f[32]++;const post=(cov_23ucov19zy().s[102]++,new _Post.Post({title:"keza testing ",content:"unit testing with mocha and user keza"}));// post.save()
cov_23ucov19zy().s[103]++;_chai.default.request(_index.default).post("/api/posts").send(post)//set the auth header with our token
.set('Authorization',userToken).end(function(error,response){cov_23ucov19zy().f[33]++;cov_23ucov19zy().s[104]++;response.should.have.status(403);cov_23ucov19zy().s[105]++;response.body.should.have.property('message').eql("Invalid token");cov_23ucov19zy().s[106]++;done();});});cov_23ucov19zy().s[107]++;it("do not create a post without title and content",done=>{cov_23ucov19zy().f[34]++;const post=(cov_23ucov19zy().s[108]++,new _Post.Post({title:"",content:""}));// post.save()
cov_23ucov19zy().s[109]++;_chai.default.request(_index.default).post("/api/posts")//set the auth header with our token
.set('Authorization','Bearer '+autToken).send(post).end(function(error,response){cov_23ucov19zy().f[35]++;cov_23ucov19zy().s[110]++;response.should.have.status(400);cov_23ucov19zy().s[111]++;response.body.should.have.property('message').eql("Title and content are required");cov_23ucov19zy().s[112]++;done();});});});/**
   * PUT a post route
   */cov_23ucov19zy().s[113]++;describe('PUT /api/posts/:id',()=>{cov_23ucov19zy().f[36]++;cov_23ucov19zy().s[114]++;it('updates a post',done=>{cov_23ucov19zy().f[37]++;const postId=(cov_23ucov19zy().s[115]++,"625971e678ffabd74eeb9f9c");const post=(cov_23ucov19zy().s[116]++,{title:"unit testing",content:"mocha Js framework for testing"});cov_23ucov19zy().s[117]++;_chai.default.request(_index.default).patch(`/api/posts/${postId}`).send(post).set('Authorization','Bearer '+autToken).end((err,response)=>{cov_23ucov19zy().f[38]++;cov_23ucov19zy().s[118]++;response.should.have.status(200);cov_23ucov19zy().s[119]++;response.body.should.be.a('object');cov_23ucov19zy().s[120]++;response.body.should.have.property('message').eql("Post successfully updated!");cov_23ucov19zy().s[121]++;done();});});cov_23ucov19zy().s[122]++;it('don\'t updates a post when title or content is empty',done=>{cov_23ucov19zy().f[39]++;const postId=(cov_23ucov19zy().s[123]++,"625af4e9872ff42d49f47dcd");const post=(cov_23ucov19zy().s[124]++,{title:"avicii",content:""});cov_23ucov19zy().s[125]++;_chai.default.request(_index.default).patch(`/api/posts/${postId}`).send(post).set('Authorization','Bearer '+autToken).end((err,response)=>{cov_23ucov19zy().f[40]++;cov_23ucov19zy().s[126]++;response.should.have.status(400);cov_23ucov19zy().s[127]++;response.body.should.be.a('object');cov_23ucov19zy().s[128]++;response.body.should.have.property('message').eql("Title and content need value!");cov_23ucov19zy().s[129]++;done();});});});/**
   * DELETE post route
   */cov_23ucov19zy().s[130]++;describe('DELETE /api/posts/:id',()=>{cov_23ucov19zy().f[41]++;cov_23ucov19zy().s[131]++;it('It deletes a post',done=>{cov_23ucov19zy().f[42]++;const postId=(cov_23ucov19zy().s[132]++,"62597f8412f8da13b4e0a385");cov_23ucov19zy().s[133]++;_chai.default.request(_index.default).delete(`/api/posts/${postId}`).set('Authorization','Bearer '+autToken).end((err,response)=>{cov_23ucov19zy().f[43]++;cov_23ucov19zy().s[134]++;response.should.have.status(200);cov_23ucov19zy().s[135]++;done();});});cov_23ucov19zy().s[136]++;it('It should not delete post that doesn\'t exist in DB',done=>{cov_23ucov19zy().f[44]++;const postId=(cov_23ucov19zy().s[137]++,"625b07c93cc2f2b0163f1a75");cov_23ucov19zy().s[138]++;_chai.default.request(_index.default).delete(`/api/posts/${postId}`).set('Authorization','Bearer '+autToken).end((err,response)=>{cov_23ucov19zy().f[45]++;cov_23ucov19zy().s[139]++;response.should.have.status(404);cov_23ucov19zy().s[140]++;response.body.should.have.property('error').eql("Post doesn't exist!");cov_23ucov19zy().s[141]++;done();});});});/**
   * GET Contact route
   */cov_23ucov19zy().s[142]++;describe('GET /api/messages',()=>{cov_23ucov19zy().f[46]++;cov_23ucov19zy().s[143]++;it('get all messages',done=>{cov_23ucov19zy().f[47]++;cov_23ucov19zy().s[144]++;_chai.default.request(_index.default).get("/api/messages").end((err,response)=>{cov_23ucov19zy().f[48]++;cov_23ucov19zy().s[145]++;response.should.have.status(200);cov_23ucov19zy().s[146]++;response.body.should.property('message').eql("contacts fetched!");cov_23ucov19zy().s[147]++;done();});});cov_23ucov19zy().s[148]++;it('don\'t return any message',done=>{cov_23ucov19zy().f[49]++;cov_23ucov19zy().s[149]++;_chai.default.request(_index.default).get("/api/message").end((err,response)=>{cov_23ucov19zy().f[50]++;cov_23ucov19zy().s[150]++;response.should.have.status(404);cov_23ucov19zy().s[151]++;done();});});});/**
   * POST Contact route
   */cov_23ucov19zy().s[152]++;describe('POST /api/messages',()=>{cov_23ucov19zy().f[51]++;cov_23ucov19zy().s[153]++;it('Send messages',done=>{cov_23ucov19zy().f[52]++;const message=(cov_23ucov19zy().s[154]++,{sender:'test@mail.com',name:"Eric gasana",message:"I would like to thank you for those valuable posts"});cov_23ucov19zy().s[155]++;_chai.default.request(_index.default).post("/api/messages").send(message).end((err,response)=>{cov_23ucov19zy().f[53]++;cov_23ucov19zy().s[156]++;response.should.have.status(201);cov_23ucov19zy().s[157]++;response.body.should.property('message').eql("Message Sent successfully");cov_23ucov19zy().s[158]++;done();});});cov_23ucov19zy().s[159]++;it('dont send a message when sender, message content is not provided',done=>{cov_23ucov19zy().f[54]++;const message=(cov_23ucov19zy().s[160]++,{sender:'',name:"sawa",message:""});cov_23ucov19zy().s[161]++;_chai.default.request(_index.default).post("/api/messages").send(message).end((err,response)=>{cov_23ucov19zy().f[55]++;cov_23ucov19zy().s[162]++;response.should.have.status(403);cov_23ucov19zy().s[163]++;response.body.should.property('message').eql("sender and message are required");cov_23ucov19zy().s[164]++;done();});});});/**
   * GET comment route
  */cov_23ucov19zy().s[165]++;describe('GET /api/posts/:id/comment',()=>{cov_23ucov19zy().f[56]++;cov_23ucov19zy().s[166]++;it('shows all comments related to specific post',done=>{cov_23ucov19zy().f[57]++;const postId=(cov_23ucov19zy().s[167]++,"625943e64e9dd47477f9be96");cov_23ucov19zy().s[168]++;_chai.default.request(_index.default).get(`/api/posts/${postId}/comment`).send({postId}).end((err,response)=>{cov_23ucov19zy().f[58]++;cov_23ucov19zy().s[169]++;response.should.have.status(200);cov_23ucov19zy().s[170]++;response.body.should.have.a('object');cov_23ucov19zy().s[171]++;done();});});cov_23ucov19zy().s[172]++;it('show error when that post in not in DB',done=>{cov_23ucov19zy().f[59]++;const postId=(cov_23ucov19zy().s[173]++,"625b07c93cc2f2b0163f1a75");cov_23ucov19zy().s[174]++;_chai.default.request(_index.default).get(`/api/posts/${postId}/comment`).send({postId}).end((err,response)=>{cov_23ucov19zy().f[60]++;cov_23ucov19zy().s[175]++;response.should.have.status(404);cov_23ucov19zy().s[176]++;response.body.should.have.property('message').eql("post not found");cov_23ucov19zy().s[177]++;done();});});cov_23ucov19zy().s[178]++;it('when post have no comment',done=>{cov_23ucov19zy().f[61]++;const postId=(cov_23ucov19zy().s[179]++,"62597f9e70efe2a55030c5ab");cov_23ucov19zy().s[180]++;_chai.default.request(_index.default).get(`/api/posts/${postId}/comment`).send({postId}).end((err,response)=>{cov_23ucov19zy().f[62]++;cov_23ucov19zy().s[181]++;response.should.have.status(404);cov_23ucov19zy().s[182]++;response.body.should.have.property('comment').eql("no comments related to this post");cov_23ucov19zy().s[183]++;done();});});cov_23ucov19zy().s[184]++;it('shows individual comment',done=>{cov_23ucov19zy().f[63]++;const commentId=(cov_23ucov19zy().s[185]++,"6257f76d68ee5f8c8f964d0b");cov_23ucov19zy().s[186]++;_chai.default.request(_index.default).get(`/api/comments/${commentId}`).send({commentId}).end((err,response)=>{cov_23ucov19zy().f[64]++;cov_23ucov19zy().s[187]++;response.should.have.status(200);cov_23ucov19zy().s[188]++;response.body.should.be.a('object');cov_23ucov19zy().s[189]++;response.body.should.have.property('comment');cov_23ucov19zy().s[190]++;done();});});cov_23ucov19zy().s[191]++;it('shows error for non existing comment',done=>{cov_23ucov19zy().f[65]++;const commentId=(cov_23ucov19zy().s[192]++,"625943e64e9dd47477f9be96");cov_23ucov19zy().s[193]++;_chai.default.request(_index.default).get(`/api/comments/${commentId}`).send({commentId}).end((err,response)=>{cov_23ucov19zy().f[66]++;cov_23ucov19zy().s[194]++;response.should.have.status(404);cov_23ucov19zy().s[195]++;response.body.should.be.a('object');cov_23ucov19zy().s[196]++;response.body.should.have.property('comment').eql("Comment Doesn't Exists");cov_23ucov19zy().s[197]++;done();});});});/**
  * POST comment route
  */cov_23ucov19zy().s[198]++;describe('POST /api/posts/:id/comment',()=>{cov_23ucov19zy().f[67]++;cov_23ucov19zy().s[199]++;it('comment on a post',done=>{cov_23ucov19zy().f[68]++;const postId=(cov_23ucov19zy().s[200]++,"625943e64e9dd47477f9be96");const newComment=(cov_23ucov19zy().s[201]++,{postId,description:"testing a comment"});cov_23ucov19zy().s[202]++;_chai.default.request(_index.default).post(`/api/posts/${postId}/comment`).send(newComment).set('Authorization','Bearer '+autToken).end((err,response)=>{cov_23ucov19zy().f[69]++;cov_23ucov19zy().s[203]++;response.should.have.status(201);cov_23ucov19zy().s[204]++;response.body.should.be.a('object');cov_23ucov19zy().s[205]++;response.body.should.have.property('comment');cov_23ucov19zy().s[206]++;done();});});cov_23ucov19zy().s[207]++;it('handles when you want to comment on non existing post',done=>{cov_23ucov19zy().f[70]++;const postId=(cov_23ucov19zy().s[208]++,"62597f8412f8da13b4e0a385");const newComment=(cov_23ucov19zy().s[209]++,{postId,description:"testing a comment"});cov_23ucov19zy().s[210]++;_chai.default.request(_index.default).post(`/api/posts/${postId}/comment`).send(newComment).set('Authorization','Bearer '+autToken).end((err,response)=>{cov_23ucov19zy().f[71]++;cov_23ucov19zy().s[211]++;response.should.have.status(404);cov_23ucov19zy().s[212]++;response.body.should.be.a('object');cov_23ucov19zy().s[213]++;response.body.should.have.property('message').eql("Post not available");cov_23ucov19zy().s[214]++;done();});});});/**
   * DELETE comment route
   */cov_23ucov19zy().s[215]++;describe('DELETE /api/comments/:id',()=>{cov_23ucov19zy().f[72]++;cov_23ucov19zy().s[216]++;it('deletes comment on a post',done=>{cov_23ucov19zy().f[73]++;const commentId=(cov_23ucov19zy().s[217]++,"6257c120c9ebb837fc381ac8");cov_23ucov19zy().s[218]++;_chai.default.request(_index.default).delete(`/api/comments/${commentId}`).set('Authorization','Bearer '+autToken).end((err,response)=>{cov_23ucov19zy().f[74]++;cov_23ucov19zy().s[219]++;response.should.have.status(200);cov_23ucov19zy().s[220]++;done();});});cov_23ucov19zy().s[221]++;it('handles when you want to delete non existing comment',done=>{cov_23ucov19zy().f[75]++;const commentId=(cov_23ucov19zy().s[222]++,"625943e64e9dd47477f9be96");cov_23ucov19zy().s[223]++;_chai.default.request(_index.default).delete(`/api/comments/${commentId}`).set('Authorization','Bearer '+autToken).end((err,response)=>{cov_23ucov19zy().f[76]++;cov_23ucov19zy().s[224]++;response.should.have.status(404);cov_23ucov19zy().s[225]++;response.body.should.have.property('message').eql("Comment doesn't exist");cov_23ucov19zy().s[226]++;done();});});});/**
   * POST like route
   */cov_23ucov19zy().s[227]++;describe('POST /api/posts/like',()=>{cov_23ucov19zy().f[77]++;cov_23ucov19zy().s[228]++;it('likes a post on blog',done=>{cov_23ucov19zy().f[78]++;const like=(cov_23ucov19zy().s[229]++,{postId:"625c7165aec6ae2c5160b919",userId:"625783e613e48cec4a6e5901"});cov_23ucov19zy().s[230]++;_chai.default.request(_index.default).put('/api/posts/like').send(like).set('Authorization','Bearer '+autToken).end((err,response)=>{cov_23ucov19zy().f[79]++;cov_23ucov19zy().s[231]++;response.should.have.status(200);cov_23ucov19zy().s[232]++;response.body.should.be.a('object');cov_23ucov19zy().s[233]++;response.body.should.have.property('message').eql("post liked!");});});});});//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//# sourceMappingURL=data:application/json;charset=utf-8;base64,